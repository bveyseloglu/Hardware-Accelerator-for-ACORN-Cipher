// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ==============================================================

// AXILiteS
// 0x000 : Control signals
//         bit 0  - ap_start (Read/Write/COH)
//         bit 1  - ap_done (Read/COR)
//         bit 2  - ap_idle (Read)
//         bit 3  - ap_ready (Read)
//         bit 7  - auto_restart (Read/Write)
//         others - reserved
// 0x004 : Global Interrupt Enable Register
//         bit 0  - Global Interrupt Enable (Read/Write)
//         others - reserved
// 0x008 : IP Interrupt Enable Register (Read/Write)
//         bit 0  - Channel 0 (ap_done)
//         bit 1  - Channel 1 (ap_ready)
//         others - reserved
// 0x00c : IP Interrupt Status Register (Read/TOW)
//         bit 0  - Channel 0 (ap_done)
//         bit 1  - Channel 1 (ap_ready)
//         others - reserved
// 0x010 : Data signal of ap_return
//         bit 31~0 - ap_return[31:0] (Read)
// 0x400 : Data signal of plaintextbyte
//         bit 7~0 - plaintextbyte[7:0] (Read/Write)
//         others  - reserved
// 0x404 : reserved
// 0x408 : Data signal of ciphertextbyte
//         bit 7~0 - ciphertextbyte[7:0] (Read/Write)
//         others  - reserved
// 0x40c : reserved
// 0x410 : Data signal of ksbyte
//         bit 7~0 - ksbyte[7:0] (Read/Write)
//         others  - reserved
// 0x414 : reserved
// 0x418 : Data signal of cabyte
//         bit 7~0 - cabyte[7:0] (Read/Write)
//         others  - reserved
// 0x41c : reserved
// 0x420 : Data signal of cbbyte
//         bit 7~0 - cbbyte[7:0] (Read/Write)
//         others  - reserved
// 0x424 : reserved
// 0x200 ~
// 0x3ff : Memory 'state' (293 * 8b)
//         Word n : bit [ 7: 0] - state[4n]
//                  bit [15: 8] - state[4n+1]
//                  bit [23:16] - state[4n+2]
//                  bit [31:24] - state[4n+3]
// (SC = Self Clear, COR = Clear on Read, TOW = Toggle on Write, COH = Clear on Handshake)

#define XACORN128_ENC_ONEBYTE_AXILITES_ADDR_AP_CTRL             0x000
#define XACORN128_ENC_ONEBYTE_AXILITES_ADDR_GIE                 0x004
#define XACORN128_ENC_ONEBYTE_AXILITES_ADDR_IER                 0x008
#define XACORN128_ENC_ONEBYTE_AXILITES_ADDR_ISR                 0x00c
#define XACORN128_ENC_ONEBYTE_AXILITES_ADDR_AP_RETURN           0x010
#define XACORN128_ENC_ONEBYTE_AXILITES_BITS_AP_RETURN           32
#define XACORN128_ENC_ONEBYTE_AXILITES_ADDR_PLAINTEXTBYTE_DATA  0x400
#define XACORN128_ENC_ONEBYTE_AXILITES_BITS_PLAINTEXTBYTE_DATA  8
#define XACORN128_ENC_ONEBYTE_AXILITES_ADDR_CIPHERTEXTBYTE_DATA 0x408
#define XACORN128_ENC_ONEBYTE_AXILITES_BITS_CIPHERTEXTBYTE_DATA 8
#define XACORN128_ENC_ONEBYTE_AXILITES_ADDR_KSBYTE_DATA         0x410
#define XACORN128_ENC_ONEBYTE_AXILITES_BITS_KSBYTE_DATA         8
#define XACORN128_ENC_ONEBYTE_AXILITES_ADDR_CABYTE_DATA         0x418
#define XACORN128_ENC_ONEBYTE_AXILITES_BITS_CABYTE_DATA         8
#define XACORN128_ENC_ONEBYTE_AXILITES_ADDR_CBBYTE_DATA         0x420
#define XACORN128_ENC_ONEBYTE_AXILITES_BITS_CBBYTE_DATA         8
#define XACORN128_ENC_ONEBYTE_AXILITES_ADDR_STATE_BASE          0x200
#define XACORN128_ENC_ONEBYTE_AXILITES_ADDR_STATE_HIGH          0x3ff
#define XACORN128_ENC_ONEBYTE_AXILITES_WIDTH_STATE              8
#define XACORN128_ENC_ONEBYTE_AXILITES_DEPTH_STATE              293


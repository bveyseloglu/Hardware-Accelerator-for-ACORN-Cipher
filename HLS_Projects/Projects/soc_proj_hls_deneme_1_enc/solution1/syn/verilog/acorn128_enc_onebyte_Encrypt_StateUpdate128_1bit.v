// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module acorn128_enc_onebyte_Encrypt_StateUpdate128_1bit (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        state_address0,
        state_ce0,
        state_we0,
        state_d0,
        state_q0,
        plaintextbit,
        ca,
        cb
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 23'b1;
parameter    ap_ST_st2_fsm_1 = 23'b10;
parameter    ap_ST_st3_fsm_2 = 23'b100;
parameter    ap_ST_st4_fsm_3 = 23'b1000;
parameter    ap_ST_st5_fsm_4 = 23'b10000;
parameter    ap_ST_st6_fsm_5 = 23'b100000;
parameter    ap_ST_st7_fsm_6 = 23'b1000000;
parameter    ap_ST_st8_fsm_7 = 23'b10000000;
parameter    ap_ST_st9_fsm_8 = 23'b100000000;
parameter    ap_ST_st10_fsm_9 = 23'b1000000000;
parameter    ap_ST_st11_fsm_10 = 23'b10000000000;
parameter    ap_ST_st12_fsm_11 = 23'b100000000000;
parameter    ap_ST_st13_fsm_12 = 23'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 23'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 23'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 23'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 23'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 23'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 23'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 23'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 23'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 23'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 23'b10000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv64_EB = 64'b11101011;
parameter    ap_const_lv64_E6 = 64'b11100110;
parameter    ap_const_lv64_121 = 64'b100100001;
parameter    ap_const_lv64_C4 = 64'b11000100;
parameter    ap_const_lv64_C1 = 64'b11000001;
parameter    ap_const_lv64_A0 = 64'b10100000;
parameter    ap_const_lv64_9A = 64'b10011010;
parameter    ap_const_lv64_6F = 64'b1101111;
parameter    ap_const_lv64_6B = 64'b1101011;
parameter    ap_const_lv64_42 = 64'b1000010;
parameter    ap_const_lv64_3D = 64'b111101;
parameter    ap_const_lv64_17 = 64'b10111;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_C = 64'b1100;
parameter    ap_const_lv64_F4 = 64'b11110100;
parameter    ap_const_lv64_124 = 64'b100100100;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv9_124 = 9'b100100100;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] state_address0;
output   state_ce0;
output   state_we0;
output  [7:0] state_d0;
input  [7:0] state_q0;
input  [0:0] plaintextbit;
input  [0:0] ca;
input  [0:0] cb;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[8:0] state_address0;
reg state_ce0;
reg state_we0;
reg[7:0] state_d0;
(* fsm_encoding = "none" *) reg   [22:0] ap_CS_fsm = 23'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_41;
reg   [7:0] reg_256;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_62;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_69;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_77;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_85;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_bdd_93;
reg   [7:0] reg_260;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_102;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_109;
reg   [7:0] reg_264;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_118;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_125;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_133;
reg   [7:0] reg_268;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_142;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_149;
wire   [0:0] tmp_24_fu_278_p1;
reg   [0:0] tmp_24_reg_528;
wire   [8:0] state_addr_2_gep_fu_91_p3;
reg   [8:0] state_addr_2_reg_533;
wire   [8:0] state_addr_3_gep_fu_100_p3;
reg   [8:0] state_addr_3_reg_538;
wire   [7:0] grp_fu_272_p2;
reg   [7:0] tmp1_reg_543;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_170;
wire   [0:0] tmp_25_fu_282_p1;
reg   [0:0] tmp_25_reg_553;
wire   [8:0] state_addr_5_gep_fu_118_p3;
reg   [8:0] state_addr_5_reg_558;
wire   [7:0] tmp_s_fu_286_p2;
reg   [7:0] tmp_s_reg_563;
wire   [7:0] x_assign_1_fu_297_p2;
reg   [7:0] x_assign_1_reg_568;
wire   [0:0] tmp_26_fu_303_p1;
reg   [0:0] tmp_26_reg_573;
wire   [8:0] state_addr_7_gep_fu_136_p3;
reg   [8:0] state_addr_7_reg_584;
wire   [0:0] tmp_28_fu_307_p1;
reg   [0:0] tmp_28_reg_594;
wire   [8:0] state_addr_9_gep_fu_154_p3;
reg   [8:0] state_addr_9_reg_599;
wire   [7:0] tmp3_fu_311_p2;
reg   [7:0] tmp3_reg_604;
wire   [7:0] tmp_3_fu_323_p2;
reg   [7:0] tmp_3_reg_609;
wire   [0:0] tmp_29_fu_329_p1;
reg   [0:0] tmp_29_reg_614;
wire   [8:0] state_addr_11_gep_fu_172_p3;
reg   [8:0] state_addr_11_reg_624;
wire   [0:0] tmp_fu_352_p2;
reg   [0:0] tmp_reg_629;
wire   [7:0] tmp_5_fu_358_p2;
reg   [7:0] tmp_5_reg_634;
wire   [7:0] z_assign_fu_364_p2;
reg   [7:0] z_assign_reg_655;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_221;
wire   [7:0] y_assign_fu_379_p2;
reg   [7:0] y_assign_reg_660;
wire   [0:0] tmp_i_i_fu_426_p2;
reg   [0:0] tmp_i_i_reg_665;
wire   [7:0] tmp_1_i_i_fu_438_p2;
reg   [7:0] tmp_1_i_i_reg_675;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_bdd_236;
wire   [7:0] tmp_2_i_i_fu_444_p2;
reg   [7:0] tmp_2_i_i_reg_680;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_bdd_247;
wire   [0:0] tmp_1_i_fu_450_p2;
reg   [0:0] tmp_1_i_reg_690;
wire   [0:0] tmp_2_i_fu_455_p2;
reg   [0:0] tmp_2_i_reg_695;
wire   [8:0] j_1_fu_466_p2;
reg   [8:0] j_1_reg_703;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_bdd_260;
wire   [0:0] exitcond_fu_460_p2;
reg   [8:0] j_reg_243;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_bdd_276;
wire   [63:0] tmp_6_fu_472_p1;
wire   [63:0] tmp_7_fu_518_p1;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_bdd_321;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_bdd_329;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_bdd_337;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_bdd_345;
wire   [7:0] tmp_4_fu_511_p2;
wire   [7:0] tmp2_fu_291_p2;
wire   [7:0] tmp4_fu_317_p2;
wire   [0:0] tmp_30_fu_333_p1;
wire   [0:0] tmp_4_i_i_i_fu_341_p2;
wire   [0:0] tmp_i9_i_i_fu_337_p2;
wire   [0:0] tmp_5_i_i_i_fu_346_p2;
wire   [7:0] tmp6_fu_373_p2;
wire   [0:0] tmp_27_fu_369_p1;
wire   [0:0] tmp_31_fu_385_p1;
wire   [0:0] tmp_i_i_i_fu_393_p2;
wire   [0:0] tmp_32_fu_389_p1;
wire   [0:0] tmp_2_i_i_i_fu_404_p2;
wire   [0:0] tmp8_fu_410_p2;
wire   [0:0] tmp_1_i_i_i_fu_399_p2;
wire   [0:0] tmp9_fu_421_p2;
wire   [0:0] tmp7_fu_416_p2;
wire   [7:0] tmp_i_i_2_fu_432_p2;
wire   [7:0] tmp12_fu_482_p2;
wire   [7:0] tmp10_fu_477_p2;
wire   [0:0] tmp13_fu_492_p2;
wire   [0:0] tmp15_fu_496_p2;
wire   [0:0] tmp14_fu_501_p2;
wire   [7:0] tmp14_cast_fu_507_p1;
wire   [7:0] tmp11_fu_486_p2;
reg   [22:0] ap_NS_fsm;




/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        j_reg_243 <= j_1_reg_703;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        j_reg_243 <= ap_const_lv9_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        j_1_reg_703 <= j_1_fu_466_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11))) begin
        reg_256 <= state_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        reg_260 <= state_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) | (ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12))) begin
        reg_264 <= state_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | (ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13))) begin
        reg_268 <= state_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        tmp1_reg_543 <= grp_fu_272_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        tmp3_reg_604 <= tmp3_fu_311_p2;
        tmp_29_reg_614 <= tmp_29_fu_329_p1;
        tmp_3_reg_609 <= tmp_3_fu_323_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        tmp_1_i_i_reg_675 <= tmp_1_i_i_fu_438_p2;
        tmp_2_i_i_reg_680 <= tmp_2_i_i_fu_444_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        tmp_1_i_reg_690 <= tmp_1_i_fu_450_p2;
        tmp_2_i_reg_695 <= tmp_2_i_fu_455_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        tmp_24_reg_528 <= tmp_24_fu_278_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        tmp_25_reg_553 <= tmp_25_fu_282_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        tmp_26_reg_573 <= tmp_26_fu_303_p1;
        tmp_s_reg_563 <= tmp_s_fu_286_p2;
        x_assign_1_reg_568 <= x_assign_1_fu_297_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        tmp_28_reg_594 <= tmp_28_fu_307_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        tmp_5_reg_634 <= tmp_5_fu_358_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        tmp_i_i_reg_665 <= tmp_i_i_fu_426_p2;
        y_assign_reg_660 <= y_assign_fu_379_p2;
        z_assign_reg_655 <= z_assign_fu_364_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        tmp_reg_629 <= tmp_fu_352_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st22_fsm_21 or exitcond_fu_460_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) & ~(exitcond_fu_460_p2 == ap_const_lv1_0)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st22_fsm_21 or exitcond_fu_460_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) & ~(exitcond_fu_460_p2 == ap_const_lv1_0))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st10_fsm_9 assign process. ///
always @ (ap_sig_bdd_85)
begin
    if (ap_sig_bdd_85) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st11_fsm_10 assign process. ///
always @ (ap_sig_bdd_125)
begin
    if (ap_sig_bdd_125) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st12_fsm_11 assign process. ///
always @ (ap_sig_bdd_93)
begin
    if (ap_sig_bdd_93) begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st13_fsm_12 assign process. ///
always @ (ap_sig_bdd_133)
begin
    if (ap_sig_bdd_133) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st14_fsm_13 assign process. ///
always @ (ap_sig_bdd_149)
begin
    if (ap_sig_bdd_149) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st15_fsm_14 assign process. ///
always @ (ap_sig_bdd_221)
begin
    if (ap_sig_bdd_221) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st16_fsm_15 assign process. ///
always @ (ap_sig_bdd_236)
begin
    if (ap_sig_bdd_236) begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st17_fsm_16 assign process. ///
always @ (ap_sig_bdd_321)
begin
    if (ap_sig_bdd_321) begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st18_fsm_17 assign process. ///
always @ (ap_sig_bdd_329)
begin
    if (ap_sig_bdd_329) begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st19_fsm_18 assign process. ///
always @ (ap_sig_bdd_337)
begin
    if (ap_sig_bdd_337) begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_41)
begin
    if (ap_sig_bdd_41) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st20_fsm_19 assign process. ///
always @ (ap_sig_bdd_345)
begin
    if (ap_sig_bdd_345) begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st21_fsm_20 assign process. ///
always @ (ap_sig_bdd_247)
begin
    if (ap_sig_bdd_247) begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st22_fsm_21 assign process. ///
always @ (ap_sig_bdd_260)
begin
    if (ap_sig_bdd_260) begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st23_fsm_22 assign process. ///
always @ (ap_sig_bdd_276)
begin
    if (ap_sig_bdd_276) begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_62)
begin
    if (ap_sig_bdd_62) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_102)
begin
    if (ap_sig_bdd_102) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_170)
begin
    if (ap_sig_bdd_170) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_69)
begin
    if (ap_sig_bdd_69) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_77)
begin
    if (ap_sig_bdd_77) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_109)
begin
    if (ap_sig_bdd_109) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_118)
begin
    if (ap_sig_bdd_118) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_8 assign process. ///
always @ (ap_sig_bdd_142)
begin
    if (ap_sig_bdd_142) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

/// state_address0 assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st12_fsm_11 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st14_fsm_13 or state_addr_2_reg_533 or state_addr_3_reg_538 or ap_sig_cseq_ST_st4_fsm_3 or state_addr_5_reg_558 or state_addr_7_reg_584 or state_addr_9_reg_599 or state_addr_11_reg_624 or ap_sig_cseq_ST_st15_fsm_14 or ap_sig_cseq_ST_st16_fsm_15 or ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st22_fsm_21 or exitcond_fu_460_p2 or ap_sig_cseq_ST_st23_fsm_22 or tmp_6_fu_472_p1 or tmp_7_fu_518_p1 or ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st18_fsm_17 or ap_sig_cseq_ST_st19_fsm_18 or ap_sig_cseq_ST_st20_fsm_19)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        state_address0 = tmp_7_fu_518_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) & ~(exitcond_fu_460_p2 == ap_const_lv1_0))) begin
        state_address0 = ap_const_lv64_124;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        state_address0 = state_addr_11_reg_624;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        state_address0 = state_addr_9_reg_599;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        state_address0 = state_addr_7_reg_584;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        state_address0 = state_addr_5_reg_558;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        state_address0 = state_addr_2_reg_533;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        state_address0 = state_addr_3_reg_538;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) & (exitcond_fu_460_p2 == ap_const_lv1_0))) begin
        state_address0 = tmp_6_fu_472_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        state_address0 = ap_const_lv64_F4;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        state_address0 = ap_const_lv64_C;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        state_address0 = ap_const_lv64_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        state_address0 = ap_const_lv64_17;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        state_address0 = ap_const_lv64_3D;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        state_address0 = ap_const_lv64_42;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        state_address0 = ap_const_lv64_6B;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        state_address0 = ap_const_lv64_6F;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        state_address0 = ap_const_lv64_9A;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        state_address0 = ap_const_lv64_A0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        state_address0 = ap_const_lv64_C1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        state_address0 = ap_const_lv64_C4;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        state_address0 = ap_const_lv64_121;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        state_address0 = ap_const_lv64_E6;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        state_address0 = ap_const_lv64_EB;
    end else begin
        state_address0 = 'bx;
    end
end

/// state_ce0 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st12_fsm_11 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st14_fsm_13 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st15_fsm_14 or ap_sig_cseq_ST_st16_fsm_15 or ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st22_fsm_21 or exitcond_fu_460_p2 or ap_sig_cseq_ST_st23_fsm_22 or ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st18_fsm_17 or ap_sig_cseq_ST_st19_fsm_18 or ap_sig_cseq_ST_st20_fsm_19)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) | (ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) | (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | (ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) | (ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) | (ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) | ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) & (exitcond_fu_460_p2 == ap_const_lv1_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) | ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) & ~(exitcond_fu_460_p2 == ap_const_lv1_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16) | (ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17) | (ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18) | (ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19))) begin
        state_ce0 = ap_const_logic_1;
    end else begin
        state_ce0 = ap_const_logic_0;
    end
end

/// state_d0 assign process. ///
always @ (state_q0 or tmp_s_reg_563 or x_assign_1_reg_568 or tmp_3_reg_609 or tmp_5_reg_634 or z_assign_reg_655 or y_assign_reg_660 or ap_sig_cseq_ST_st16_fsm_15 or ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st22_fsm_21 or exitcond_fu_460_p2 or ap_sig_cseq_ST_st23_fsm_22 or ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st18_fsm_17 or ap_sig_cseq_ST_st19_fsm_18 or ap_sig_cseq_ST_st20_fsm_19 or tmp_4_fu_511_p2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        state_d0 = state_q0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) & ~(exitcond_fu_460_p2 == ap_const_lv1_0))) begin
        state_d0 = tmp_4_fu_511_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        state_d0 = y_assign_reg_660;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        state_d0 = tmp_5_reg_634;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        state_d0 = tmp_3_reg_609;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        state_d0 = z_assign_reg_655;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        state_d0 = x_assign_1_reg_568;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        state_d0 = tmp_s_reg_563;
    end else begin
        state_d0 = 'bx;
    end
end

/// state_we0 assign process. ///
always @ (ap_sig_cseq_ST_st16_fsm_15 or ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st22_fsm_21 or exitcond_fu_460_p2 or ap_sig_cseq_ST_st23_fsm_22 or ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st18_fsm_17 or ap_sig_cseq_ST_st19_fsm_18 or ap_sig_cseq_ST_st20_fsm_19)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) | (ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) | (ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) | ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) & ~(exitcond_fu_460_p2 == ap_const_lv1_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16) | (ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17) | (ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18) | (ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19))) begin
        state_we0 = ap_const_logic_1;
    end else begin
        state_we0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond_fu_460_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            if (~(exitcond_fu_460_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st23_fsm_22;
            end
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_102 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_102 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_109 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_109 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_118 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_118 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_125 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_125 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end

/// ap_sig_bdd_133 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_133 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end

/// ap_sig_bdd_142 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_142 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_149 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_149 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end

/// ap_sig_bdd_170 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_170 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_221 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_221 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end

/// ap_sig_bdd_236 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_236 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end

/// ap_sig_bdd_247 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_247 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_14]);
end

/// ap_sig_bdd_260 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_260 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_15]);
end

/// ap_sig_bdd_276 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_276 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_16]);
end

/// ap_sig_bdd_321 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_321 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end

/// ap_sig_bdd_329 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_329 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_11]);
end

/// ap_sig_bdd_337 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_337 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_12]);
end

/// ap_sig_bdd_345 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_345 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_13]);
end

/// ap_sig_bdd_41 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_41 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_62 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_62 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_69 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_69 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_77 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_77 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_85 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_85 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_93 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_93 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end
assign exitcond_fu_460_p2 = (j_reg_243 == ap_const_lv9_124? 1'b1: 1'b0);
assign grp_fu_272_p2 = (reg_256 ^ state_q0);
assign j_1_fu_466_p2 = (j_reg_243 + ap_const_lv9_1);
assign state_addr_11_gep_fu_172_p3 = ap_const_lv64_3D;
assign state_addr_2_gep_fu_91_p3 = ap_const_lv64_E6;
assign state_addr_3_gep_fu_100_p3 = ap_const_lv64_121;
assign state_addr_5_gep_fu_118_p3 = ap_const_lv64_C1;
assign state_addr_7_gep_fu_136_p3 = ap_const_lv64_9A;
assign state_addr_9_gep_fu_154_p3 = ap_const_lv64_6B;
assign tmp10_fu_477_p2 = (reg_268 ^ tmp_5_reg_634);
assign tmp11_fu_486_p2 = (tmp12_fu_482_p2 ^ tmp10_fu_477_p2);
assign tmp12_fu_482_p2 = (tmp_2_i_i_reg_680 ^ tmp_1_i_i_reg_675);
assign tmp13_fu_492_p2 = (tmp_1_i_reg_690 ^ tmp_2_i_reg_695);
assign tmp14_cast_fu_507_p1 = tmp14_fu_501_p2;
assign tmp14_fu_501_p2 = (tmp13_fu_492_p2 ^ tmp15_fu_496_p2);
assign tmp15_fu_496_p2 = (plaintextbit ^ ap_const_lv1_1);
assign tmp2_fu_291_p2 = (reg_260 ^ state_q0);
assign tmp3_fu_311_p2 = (reg_256 ^ reg_264);
assign tmp4_fu_317_p2 = (reg_264 ^ state_q0);
assign tmp6_fu_373_p2 = (reg_256 ^ reg_268);
assign tmp7_fu_416_p2 = (tmp8_fu_410_p2 ^ tmp_29_reg_614);
assign tmp8_fu_410_p2 = (tmp_32_fu_389_p1 ^ tmp_2_i_i_i_fu_404_p2);
assign tmp9_fu_421_p2 = (tmp_reg_629 ^ tmp_1_i_i_i_fu_399_p2);
assign tmp_1_i_fu_450_p2 = (tmp_25_reg_553 & ca);
assign tmp_1_i_i_fu_438_p2 = (tmp_i_i_2_fu_432_p2 & state_q0);
assign tmp_1_i_i_i_fu_399_p2 = (tmp_i_i_i_fu_393_p2 & tmp_24_reg_528);
assign tmp_24_fu_278_p1 = state_q0[0:0];
assign tmp_25_fu_282_p1 = state_q0[0:0];
assign tmp_26_fu_303_p1 = x_assign_1_fu_297_p2[0:0];
assign tmp_27_fu_369_p1 = z_assign_fu_364_p2[0:0];
assign tmp_28_fu_307_p1 = state_q0[0:0];
assign tmp_29_fu_329_p1 = tmp_3_fu_323_p2[0:0];
assign tmp_2_i_fu_455_p2 = (tmp_i_i_reg_665 & cb);
assign tmp_2_i_i_fu_444_p2 = (reg_260 & reg_264);
assign tmp_2_i_i_i_fu_404_p2 = (tmp_27_fu_369_p1 & tmp_31_fu_385_p1);
assign tmp_30_fu_333_p1 = state_q0[0:0];
assign tmp_31_fu_385_p1 = y_assign_fu_379_p2[0:0];
assign tmp_32_fu_389_p1 = state_q0[0:0];
assign tmp_3_fu_323_p2 = (tmp4_fu_317_p2 ^ reg_268);
assign tmp_4_fu_511_p2 = (tmp14_cast_fu_507_p1 ^ tmp11_fu_486_p2);
assign tmp_4_i_i_i_fu_341_p2 = (tmp_26_reg_573 ^ ap_const_lv1_1);
assign tmp_5_fu_358_p2 = (grp_fu_272_p2 ^ reg_264);
assign tmp_5_i_i_i_fu_346_p2 = (tmp_30_fu_333_p1 & tmp_4_i_i_i_fu_341_p2);
assign tmp_6_fu_472_p1 = j_1_fu_466_p2;
assign tmp_7_fu_518_p1 = j_reg_243;
assign tmp_fu_352_p2 = (tmp_i9_i_i_fu_337_p2 ^ tmp_5_i_i_i_fu_346_p2);
assign tmp_i9_i_i_fu_337_p2 = (tmp_28_reg_594 & tmp_26_reg_573);
assign tmp_i_i_2_fu_432_p2 = (reg_260 ^ reg_264);
assign tmp_i_i_fu_426_p2 = (tmp9_fu_421_p2 ^ tmp7_fu_416_p2);
assign tmp_i_i_i_fu_393_p2 = (tmp_27_fu_369_p1 ^ tmp_31_fu_385_p1);
assign tmp_s_fu_286_p2 = (tmp1_reg_543 ^ reg_260);
assign x_assign_1_fu_297_p2 = (tmp2_fu_291_p2 ^ reg_256);
assign y_assign_fu_379_p2 = (tmp6_fu_373_p2 ^ reg_264);
assign z_assign_fu_364_p2 = (tmp3_reg_604 ^ reg_260);
always @ (posedge ap_clk)
begin
    state_addr_2_reg_533[8:0] <= 9'b011100110;
    state_addr_3_reg_538[8:0] <= 9'b100100001;
    state_addr_5_reg_558[8:0] <= 9'b011000001;
    state_addr_7_reg_584[8:0] <= 9'b010011010;
    state_addr_9_reg_599[8:0] <= 9'b001101011;
    state_addr_11_reg_624[8:0] <= 9'b000111101;
end



endmodule //acorn128_enc_onebyte_Encrypt_StateUpdate128_1bit


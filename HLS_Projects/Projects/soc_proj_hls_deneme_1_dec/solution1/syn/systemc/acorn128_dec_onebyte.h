// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _acorn128_dec_onebyte_HH_
#define _acorn128_dec_onebyte_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit.h"
#include "acorn128_dec_onebyte_AXILiteS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 11,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct acorn128_dec_onebyte : public sc_module {
    // Port declarations 20
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > interrupt;


    // Module declarations
    acorn128_dec_onebyte(sc_module_name name);
    SC_HAS_PROCESS(acorn128_dec_onebyte);

    ~acorn128_dec_onebyte();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    acorn128_dec_onebyte_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* acorn128_dec_onebyte_AXILiteS_s_axi_U;
    acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit* grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<16> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_57;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<9> > state_address0;
    sc_signal< sc_logic > state_ce0;
    sc_signal< sc_logic > state_we0;
    sc_signal< sc_lv<8> > state_d0;
    sc_signal< sc_lv<8> > state_q0;
    sc_signal< sc_lv<8> > plaintextbyte;
    sc_signal< sc_lv<8> > ciphertextbyte;
    sc_signal< sc_lv<8> > ksbyte;
    sc_signal< sc_lv<8> > cabyte;
    sc_signal< sc_lv<8> > cbbyte;
    sc_signal< sc_lv<32> > ap_return;
    sc_signal< sc_logic > acorn128_dec_onebyte_AXILiteS_s_axi_U_ap_dummy_ce;
    sc_signal< sc_lv<1> > tmp_fu_82_p1;
    sc_signal< sc_lv<1> > tmp_reg_265;
    sc_signal< sc_lv<1> > tmp_1_fu_87_p1;
    sc_signal< sc_lv<1> > tmp_1_reg_270;
    sc_signal< sc_lv<1> > tmp_2_fu_92_p1;
    sc_signal< sc_lv<1> > tmp_2_reg_275;
    sc_signal< sc_lv<1> > tmp_3_reg_280;
    sc_signal< sc_lv<1> > tmp_4_reg_285;
    sc_signal< sc_lv<1> > tmp_5_reg_290;
    sc_signal< sc_lv<1> > tmp_6_reg_295;
    sc_signal< sc_lv<1> > tmp_7_reg_300;
    sc_signal< sc_lv<1> > tmp_8_reg_305;
    sc_signal< sc_lv<1> > tmp_9_reg_310;
    sc_signal< sc_lv<1> > tmp_10_reg_315;
    sc_signal< sc_lv<1> > tmp_11_reg_320;
    sc_signal< sc_lv<1> > tmp_12_reg_325;
    sc_signal< sc_lv<1> > tmp_13_reg_330;
    sc_signal< sc_lv<1> > tmp_14_reg_335;
    sc_signal< sc_lv<1> > tmp_15_reg_340;
    sc_signal< sc_lv<1> > tmp_16_reg_345;
    sc_signal< sc_lv<1> > tmp_17_reg_350;
    sc_signal< sc_lv<1> > tmp_18_reg_355;
    sc_signal< sc_lv<1> > tmp_19_reg_360;
    sc_signal< sc_lv<1> > tmp_20_reg_365;
    sc_signal< sc_lv<1> > tmp_21_reg_370;
    sc_signal< sc_lv<1> > tmp_22_reg_375;
    sc_signal< sc_lv<1> > tmp_23_reg_380;
    sc_signal< sc_logic > grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_start;
    sc_signal< sc_logic > grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_done;
    sc_signal< sc_logic > grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_idle;
    sc_signal< sc_logic > grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_ready;
    sc_signal< sc_lv<9> > grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_address0;
    sc_signal< sc_logic > grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_ce0;
    sc_signal< sc_logic > grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_we0;
    sc_signal< sc_lv<8> > grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_d0;
    sc_signal< sc_lv<8> > grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_q0;
    sc_signal< sc_lv<1> > grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ciphertextbit;
    sc_signal< sc_lv<1> > grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ca;
    sc_signal< sc_lv<1> > grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_cb;
    sc_signal< sc_logic > grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_start_ap_start_reg;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_162;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_bdd_170;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_6;
    sc_signal< bool > ap_sig_bdd_178;
    sc_signal< sc_logic > ap_sig_cseq_ST_st9_fsm_8;
    sc_signal< bool > ap_sig_bdd_186;
    sc_signal< sc_logic > ap_sig_cseq_ST_st11_fsm_10;
    sc_signal< bool > ap_sig_bdd_194;
    sc_signal< sc_logic > ap_sig_cseq_ST_st13_fsm_12;
    sc_signal< bool > ap_sig_bdd_202;
    sc_signal< sc_logic > ap_sig_cseq_ST_st15_fsm_14;
    sc_signal< bool > ap_sig_bdd_210;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_218;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_bdd_225;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_bdd_233;
    sc_signal< sc_logic > ap_sig_cseq_ST_st8_fsm_7;
    sc_signal< bool > ap_sig_bdd_241;
    sc_signal< sc_logic > ap_sig_cseq_ST_st10_fsm_9;
    sc_signal< bool > ap_sig_bdd_249;
    sc_signal< sc_logic > ap_sig_cseq_ST_st12_fsm_11;
    sc_signal< bool > ap_sig_bdd_257;
    sc_signal< sc_logic > ap_sig_cseq_ST_st14_fsm_13;
    sc_signal< bool > ap_sig_bdd_265;
    sc_signal< sc_logic > ap_sig_cseq_ST_st16_fsm_15;
    sc_signal< bool > ap_sig_bdd_273;
    sc_signal< sc_lv<16> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<16> ap_ST_st1_fsm_0;
    static const sc_lv<16> ap_ST_st2_fsm_1;
    static const sc_lv<16> ap_ST_st3_fsm_2;
    static const sc_lv<16> ap_ST_st4_fsm_3;
    static const sc_lv<16> ap_ST_st5_fsm_4;
    static const sc_lv<16> ap_ST_st6_fsm_5;
    static const sc_lv<16> ap_ST_st7_fsm_6;
    static const sc_lv<16> ap_ST_st8_fsm_7;
    static const sc_lv<16> ap_ST_st9_fsm_8;
    static const sc_lv<16> ap_ST_st10_fsm_9;
    static const sc_lv<16> ap_ST_st11_fsm_10;
    static const sc_lv<16> ap_ST_st12_fsm_11;
    static const sc_lv<16> ap_ST_st13_fsm_12;
    static const sc_lv<16> ap_ST_st14_fsm_13;
    static const sc_lv<16> ap_ST_st15_fsm_14;
    static const sc_lv<16> ap_ST_st16_fsm_15;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const int C_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_F;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_acorn128_dec_onebyte_AXILiteS_s_axi_U_ap_dummy_ce();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_bdd_162();
    void thread_ap_sig_bdd_170();
    void thread_ap_sig_bdd_178();
    void thread_ap_sig_bdd_186();
    void thread_ap_sig_bdd_194();
    void thread_ap_sig_bdd_202();
    void thread_ap_sig_bdd_210();
    void thread_ap_sig_bdd_218();
    void thread_ap_sig_bdd_225();
    void thread_ap_sig_bdd_233();
    void thread_ap_sig_bdd_241();
    void thread_ap_sig_bdd_249();
    void thread_ap_sig_bdd_257();
    void thread_ap_sig_bdd_265();
    void thread_ap_sig_bdd_273();
    void thread_ap_sig_bdd_57();
    void thread_ap_sig_cseq_ST_st10_fsm_9();
    void thread_ap_sig_cseq_ST_st11_fsm_10();
    void thread_ap_sig_cseq_ST_st12_fsm_11();
    void thread_ap_sig_cseq_ST_st13_fsm_12();
    void thread_ap_sig_cseq_ST_st14_fsm_13();
    void thread_ap_sig_cseq_ST_st15_fsm_14();
    void thread_ap_sig_cseq_ST_st16_fsm_15();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_ap_sig_cseq_ST_st7_fsm_6();
    void thread_ap_sig_cseq_ST_st8_fsm_7();
    void thread_ap_sig_cseq_ST_st9_fsm_8();
    void thread_grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_start();
    void thread_grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ca();
    void thread_grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_cb();
    void thread_grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ciphertextbit();
    void thread_grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_q0();
    void thread_state_address0();
    void thread_state_ce0();
    void thread_state_d0();
    void thread_state_we0();
    void thread_tmp_1_fu_87_p1();
    void thread_tmp_2_fu_92_p1();
    void thread_tmp_fu_82_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif

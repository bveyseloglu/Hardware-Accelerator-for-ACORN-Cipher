// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<23> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_ST_st1_fsm_0 = "1";
const sc_lv<23> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_ST_st2_fsm_1 = "10";
const sc_lv<23> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_ST_st3_fsm_2 = "100";
const sc_lv<23> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_ST_st4_fsm_3 = "1000";
const sc_lv<23> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_ST_st5_fsm_4 = "10000";
const sc_lv<23> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_ST_st6_fsm_5 = "100000";
const sc_lv<23> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<23> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<23> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<23> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<23> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<23> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_ST_st12_fsm_11 = "100000000000";
const sc_lv<23> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_ST_st13_fsm_12 = "1000000000000";
const sc_lv<23> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_ST_st14_fsm_13 = "10000000000000";
const sc_lv<23> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_ST_st15_fsm_14 = "100000000000000";
const sc_lv<23> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_ST_st16_fsm_15 = "1000000000000000";
const sc_lv<23> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_ST_st17_fsm_16 = "10000000000000000";
const sc_lv<23> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_ST_st18_fsm_17 = "100000000000000000";
const sc_lv<23> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_ST_st19_fsm_18 = "1000000000000000000";
const sc_lv<23> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_ST_st20_fsm_19 = "10000000000000000000";
const sc_lv<23> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_ST_st21_fsm_20 = "100000000000000000000";
const sc_lv<23> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_ST_st22_fsm_21 = "1000000000000000000000";
const sc_lv<23> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_ST_st23_fsm_22 = "10000000000000000000000";
const sc_lv<32> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv1_1 = "1";
const sc_lv<32> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv32_2 = "10";
const sc_lv<32> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv32_5 = "101";
const sc_lv<32> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv32_B = "1011";
const sc_lv<32> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv32_D = "1101";
const sc_lv<32> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv32_3 = "11";
const sc_lv<32> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv32_6 = "110";
const sc_lv<32> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv32_4 = "100";
const sc_lv<32> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv32_7 = "111";
const sc_lv<32> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv32_C = "1100";
const sc_lv<32> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv32_1 = "1";
const sc_lv<32> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv32_8 = "1000";
const sc_lv<32> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv32_9 = "1001";
const sc_lv<32> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv32_A = "1010";
const sc_lv<32> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv32_E = "1110";
const sc_lv<32> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv32_F = "1111";
const sc_lv<32> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv32_14 = "10100";
const sc_lv<32> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv32_15 = "10101";
const sc_lv<1> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv1_0 = "0";
const sc_lv<9> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv9_0 = "000000000";
const sc_lv<32> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv32_16 = "10110";
const sc_lv<64> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv64_EB = "11101011";
const sc_lv<64> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv64_E6 = "11100110";
const sc_lv<64> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv64_121 = "100100001";
const sc_lv<64> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv64_C4 = "11000100";
const sc_lv<64> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv64_C1 = "11000001";
const sc_lv<64> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv64_A0 = "10100000";
const sc_lv<64> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv64_9A = "10011010";
const sc_lv<64> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv64_6F = "1101111";
const sc_lv<64> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv64_6B = "1101011";
const sc_lv<64> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv64_42 = "1000010";
const sc_lv<64> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv64_3D = "111101";
const sc_lv<64> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv64_17 = "10111";
const sc_lv<64> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv64_C = "1100";
const sc_lv<64> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv64_F4 = "11110100";
const sc_lv<64> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv64_124 = "100100100";
const sc_lv<32> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv32_10 = "10000";
const sc_lv<32> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv32_11 = "10001";
const sc_lv<32> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv32_12 = "10010";
const sc_lv<32> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv32_13 = "10011";
const sc_lv<8> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv8_1 = "1";
const sc_lv<9> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv9_124 = "100100100";
const sc_lv<9> acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::ap_const_lv9_1 = "1";

acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st22_fsm_21 );
    sensitive << ( exitcond_fu_426_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st22_fsm_21 );
    sensitive << ( exitcond_fu_426_p2 );

    SC_METHOD(thread_ap_sig_bdd_101);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_110);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_117);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_125);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_139);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_167);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_177);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_187);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_214);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_231);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_242);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_255);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_271);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_317);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_325);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_333);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_341);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_62);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_69);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_77);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_85);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_94);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st10_fsm_9);
    sensitive << ( ap_sig_bdd_177 );

    SC_METHOD(thread_ap_sig_cseq_ST_st11_fsm_10);
    sensitive << ( ap_sig_bdd_187 );

    SC_METHOD(thread_ap_sig_cseq_ST_st12_fsm_11);
    sensitive << ( ap_sig_bdd_77 );

    SC_METHOD(thread_ap_sig_cseq_ST_st13_fsm_12);
    sensitive << ( ap_sig_bdd_125 );

    SC_METHOD(thread_ap_sig_cseq_ST_st14_fsm_13);
    sensitive << ( ap_sig_bdd_85 );

    SC_METHOD(thread_ap_sig_cseq_ST_st15_fsm_14);
    sensitive << ( ap_sig_bdd_214 );

    SC_METHOD(thread_ap_sig_cseq_ST_st16_fsm_15);
    sensitive << ( ap_sig_bdd_231 );

    SC_METHOD(thread_ap_sig_cseq_ST_st17_fsm_16);
    sensitive << ( ap_sig_bdd_317 );

    SC_METHOD(thread_ap_sig_cseq_ST_st18_fsm_17);
    sensitive << ( ap_sig_bdd_325 );

    SC_METHOD(thread_ap_sig_cseq_ST_st19_fsm_18);
    sensitive << ( ap_sig_bdd_333 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_41 );

    SC_METHOD(thread_ap_sig_cseq_ST_st20_fsm_19);
    sensitive << ( ap_sig_bdd_341 );

    SC_METHOD(thread_ap_sig_cseq_ST_st21_fsm_20);
    sensitive << ( ap_sig_bdd_242 );

    SC_METHOD(thread_ap_sig_cseq_ST_st22_fsm_21);
    sensitive << ( ap_sig_bdd_255 );

    SC_METHOD(thread_ap_sig_cseq_ST_st23_fsm_22);
    sensitive << ( ap_sig_bdd_271 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_139 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_bdd_62 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_bdd_94 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_bdd_110 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_bdd_69 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_6);
    sensitive << ( ap_sig_bdd_101 );

    SC_METHOD(thread_ap_sig_cseq_ST_st8_fsm_7);
    sensitive << ( ap_sig_bdd_117 );

    SC_METHOD(thread_ap_sig_cseq_ST_st9_fsm_8);
    sensitive << ( ap_sig_bdd_167 );

    SC_METHOD(thread_ciphertextbit_cast_fu_412_p1);
    sensitive << ( ciphertextbit );

    SC_METHOD(thread_exitcond_fu_426_p2);
    sensitive << ( ap_sig_cseq_ST_st22_fsm_21 );
    sensitive << ( j_reg_243 );

    SC_METHOD(thread_grp_fu_268_p2);
    sensitive << ( state_q0 );
    sensitive << ( reg_256 );

    SC_METHOD(thread_j_1_fu_432_p2);
    sensitive << ( j_reg_243 );

    SC_METHOD(thread_state_addr_11_gep_fu_172_p3);
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );

    SC_METHOD(thread_state_addr_2_gep_fu_91_p3);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_state_addr_3_gep_fu_100_p3);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_state_addr_5_gep_fu_118_p3);
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_state_addr_7_gep_fu_136_p3);
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_state_addr_9_gep_fu_154_p3);
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );

    SC_METHOD(thread_state_address0);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( state_addr_2_reg_505 );
    sensitive << ( state_addr_3_reg_510 );
    sensitive << ( state_addr_5_reg_525 );
    sensitive << ( state_addr_7_reg_547 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( state_addr_9_reg_563 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( state_addr_11_reg_585 );
    sensitive << ( ap_sig_cseq_ST_st15_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st22_fsm_21 );
    sensitive << ( exitcond_fu_426_p2 );
    sensitive << ( ap_sig_cseq_ST_st23_fsm_22 );
    sensitive << ( tmp_6_fu_438_p1 );
    sensitive << ( tmp_7_fu_489_p1 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_st19_fsm_18 );
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );

    SC_METHOD(thread_state_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st15_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st22_fsm_21 );
    sensitive << ( exitcond_fu_426_p2 );
    sensitive << ( ap_sig_cseq_ST_st23_fsm_22 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_st19_fsm_18 );
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );

    SC_METHOD(thread_state_d0);
    sensitive << ( state_q0 );
    sensitive << ( tmp_s_reg_530 );
    sensitive << ( x_assign_1_reg_535 );
    sensitive << ( tmp_3_reg_595 );
    sensitive << ( tmp_5_reg_601 );
    sensitive << ( z_assign_reg_632 );
    sensitive << ( y_assign_reg_637 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st22_fsm_21 );
    sensitive << ( exitcond_fu_426_p2 );
    sensitive << ( ap_sig_cseq_ST_st23_fsm_22 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_st19_fsm_18 );
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );
    sensitive << ( tmp_4_fu_482_p2 );

    SC_METHOD(thread_state_we0);
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st22_fsm_21 );
    sensitive << ( exitcond_fu_426_p2 );
    sensitive << ( ap_sig_cseq_ST_st23_fsm_22 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_st19_fsm_18 );
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );

    SC_METHOD(thread_tmp10_fu_443_p2);
    sensitive << ( tmp_i_i_reg_642 );
    sensitive << ( ciphertextbit_cast_reg_667 );

    SC_METHOD(thread_tmp11_fu_447_p2);
    sensitive << ( tmp_1_i_reg_672 );
    sensitive << ( tmp_2_i_reg_677 );

    SC_METHOD(thread_tmp12_fu_455_p2);
    sensitive << ( tmp15_cast_fu_451_p1 );
    sensitive << ( tmp10_fu_443_p2 );

    SC_METHOD(thread_tmp13_fu_461_p2);
    sensitive << ( tmp_1_i_i_reg_657 );
    sensitive << ( tmp_2_i_i_reg_662 );

    SC_METHOD(thread_tmp14_fu_465_p2);
    sensitive << ( reg_256 );

    SC_METHOD(thread_tmp15_cast_fu_451_p1);
    sensitive << ( tmp11_fu_447_p2 );

    SC_METHOD(thread_tmp15_fu_471_p2);
    sensitive << ( tmp_5_reg_601 );
    sensitive << ( tmp14_fu_465_p2 );

    SC_METHOD(thread_tmp16_fu_476_p2);
    sensitive << ( tmp15_fu_471_p2 );
    sensitive << ( tmp13_fu_461_p2 );

    SC_METHOD(thread_tmp1_fu_278_p2);
    sensitive << ( reg_260 );
    sensitive << ( state_load_reg_499 );

    SC_METHOD(thread_tmp3_fu_295_p2);
    sensitive << ( reg_256 );
    sensitive << ( reg_264 );

    SC_METHOD(thread_tmp4_fu_301_p2);
    sensitive << ( reg_264 );
    sensitive << ( state_load_8_reg_568 );

    SC_METHOD(thread_tmp5_fu_311_p2);
    sensitive << ( state_q0 );
    sensitive << ( state_load_8_reg_568 );

    SC_METHOD(thread_tmp7_fu_335_p2);
    sensitive << ( tmp_i9_i_i_fu_321_p2 );
    sensitive << ( tmp_5_i_i_i_fu_330_p2 );

    SC_METHOD(thread_tmp8_fu_380_p2);
    sensitive << ( tmp_3_reg_595 );
    sensitive << ( tmp7_reg_612 );

    SC_METHOD(thread_tmp9_fu_374_p2);
    sensitive << ( tmp_fu_368_p2 );
    sensitive << ( tmp_2_i_i_i_fu_362_p2 );

    SC_METHOD(thread_tmp_1_i_fu_416_p2);
    sensitive << ( ca );
    sensitive << ( tmp_24_reg_520 );

    SC_METHOD(thread_tmp_1_i_i_fu_400_p2);
    sensitive << ( state_q0 );
    sensitive << ( tmp_i_i_2_fu_394_p2 );

    SC_METHOD(thread_tmp_1_i_i_i_fu_357_p2);
    sensitive << ( state_load_reg_499 );
    sensitive << ( tmp_i_i_i_fu_351_p2 );

    SC_METHOD(thread_tmp_24_fu_274_p1);
    sensitive << ( state_q0 );

    SC_METHOD(thread_tmp_25_fu_390_p1);
    sensitive << ( tmp_i_i_fu_384_p2 );

    SC_METHOD(thread_tmp_2_i_fu_421_p2);
    sensitive << ( cb );
    sensitive << ( tmp_25_reg_647 );

    SC_METHOD(thread_tmp_2_i_i_fu_406_p2);
    sensitive << ( reg_260 );
    sensitive << ( reg_264 );

    SC_METHOD(thread_tmp_2_i_i_i_fu_362_p2);
    sensitive << ( z_assign_fu_341_p2 );
    sensitive << ( y_assign_fu_346_p2 );

    SC_METHOD(thread_tmp_3_fu_306_p2);
    sensitive << ( state_load_7_reg_557 );
    sensitive << ( tmp4_fu_301_p2 );

    SC_METHOD(thread_tmp_4_fu_482_p2);
    sensitive << ( tmp16_fu_476_p2 );
    sensitive << ( tmp12_fu_455_p2 );

    SC_METHOD(thread_tmp_4_i_i_i_fu_325_p2);
    sensitive << ( x_assign_1_reg_535 );

    SC_METHOD(thread_tmp_5_fu_316_p2);
    sensitive << ( state_load_9_reg_579 );
    sensitive << ( tmp5_fu_311_p2 );

    SC_METHOD(thread_tmp_5_i_i_i_fu_330_p2);
    sensitive << ( state_load_9_reg_579 );
    sensitive << ( tmp_4_i_i_i_fu_325_p2 );

    SC_METHOD(thread_tmp_6_fu_438_p1);
    sensitive << ( j_1_fu_432_p2 );

    SC_METHOD(thread_tmp_7_fu_489_p1);
    sensitive << ( j_reg_243 );

    SC_METHOD(thread_tmp_fu_368_p2);
    sensitive << ( state_q0 );
    sensitive << ( tmp_1_i_i_i_fu_357_p2 );

    SC_METHOD(thread_tmp_i9_i_i_fu_321_p2);
    sensitive << ( x_assign_1_reg_535 );
    sensitive << ( state_load_7_reg_557 );

    SC_METHOD(thread_tmp_i_i_2_fu_394_p2);
    sensitive << ( reg_260 );
    sensitive << ( reg_264 );

    SC_METHOD(thread_tmp_i_i_fu_384_p2);
    sensitive << ( tmp8_fu_380_p2 );
    sensitive << ( tmp9_fu_374_p2 );

    SC_METHOD(thread_tmp_i_i_i_fu_351_p2);
    sensitive << ( z_assign_fu_341_p2 );
    sensitive << ( y_assign_fu_346_p2 );

    SC_METHOD(thread_tmp_s_fu_283_p2);
    sensitive << ( reg_256 );
    sensitive << ( tmp1_fu_278_p2 );

    SC_METHOD(thread_x_assign_1_fu_289_p2);
    sensitive << ( reg_264 );
    sensitive << ( grp_fu_268_p2 );

    SC_METHOD(thread_y_assign_fu_346_p2);
    sensitive << ( reg_264 );
    sensitive << ( tmp6_reg_622 );

    SC_METHOD(thread_z_assign_fu_341_p2);
    sensitive << ( reg_260 );
    sensitive << ( tmp3_reg_590 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_fu_426_p2 );

    ap_CS_fsm = "00000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, state_address0, "(port)state_address0");
    sc_trace(mVcdFile, state_ce0, "(port)state_ce0");
    sc_trace(mVcdFile, state_we0, "(port)state_we0");
    sc_trace(mVcdFile, state_d0, "(port)state_d0");
    sc_trace(mVcdFile, state_q0, "(port)state_q0");
    sc_trace(mVcdFile, ciphertextbit, "(port)ciphertextbit");
    sc_trace(mVcdFile, ca, "(port)ca");
    sc_trace(mVcdFile, cb, "(port)cb");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_41, "ap_sig_bdd_41");
    sc_trace(mVcdFile, reg_256, "reg_256");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_62, "ap_sig_bdd_62");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_bdd_69, "ap_sig_bdd_69");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st12_fsm_11, "ap_sig_cseq_ST_st12_fsm_11");
    sc_trace(mVcdFile, ap_sig_bdd_77, "ap_sig_bdd_77");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st14_fsm_13, "ap_sig_cseq_ST_st14_fsm_13");
    sc_trace(mVcdFile, ap_sig_bdd_85, "ap_sig_bdd_85");
    sc_trace(mVcdFile, reg_260, "reg_260");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_94, "ap_sig_bdd_94");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_6, "ap_sig_cseq_ST_st7_fsm_6");
    sc_trace(mVcdFile, ap_sig_bdd_101, "ap_sig_bdd_101");
    sc_trace(mVcdFile, reg_264, "reg_264");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_bdd_110, "ap_sig_bdd_110");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st8_fsm_7, "ap_sig_cseq_ST_st8_fsm_7");
    sc_trace(mVcdFile, ap_sig_bdd_117, "ap_sig_bdd_117");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st13_fsm_12, "ap_sig_cseq_ST_st13_fsm_12");
    sc_trace(mVcdFile, ap_sig_bdd_125, "ap_sig_bdd_125");
    sc_trace(mVcdFile, state_load_reg_499, "state_load_reg_499");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_139, "ap_sig_bdd_139");
    sc_trace(mVcdFile, state_addr_2_gep_fu_91_p3, "state_addr_2_gep_fu_91_p3");
    sc_trace(mVcdFile, state_addr_2_reg_505, "state_addr_2_reg_505");
    sc_trace(mVcdFile, state_addr_3_gep_fu_100_p3, "state_addr_3_gep_fu_100_p3");
    sc_trace(mVcdFile, state_addr_3_reg_510, "state_addr_3_reg_510");
    sc_trace(mVcdFile, tmp_24_fu_274_p1, "tmp_24_fu_274_p1");
    sc_trace(mVcdFile, tmp_24_reg_520, "tmp_24_reg_520");
    sc_trace(mVcdFile, state_addr_5_gep_fu_118_p3, "state_addr_5_gep_fu_118_p3");
    sc_trace(mVcdFile, state_addr_5_reg_525, "state_addr_5_reg_525");
    sc_trace(mVcdFile, tmp_s_fu_283_p2, "tmp_s_fu_283_p2");
    sc_trace(mVcdFile, tmp_s_reg_530, "tmp_s_reg_530");
    sc_trace(mVcdFile, x_assign_1_fu_289_p2, "x_assign_1_fu_289_p2");
    sc_trace(mVcdFile, x_assign_1_reg_535, "x_assign_1_reg_535");
    sc_trace(mVcdFile, state_addr_7_gep_fu_136_p3, "state_addr_7_gep_fu_136_p3");
    sc_trace(mVcdFile, state_addr_7_reg_547, "state_addr_7_reg_547");
    sc_trace(mVcdFile, state_load_7_reg_557, "state_load_7_reg_557");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st9_fsm_8, "ap_sig_cseq_ST_st9_fsm_8");
    sc_trace(mVcdFile, ap_sig_bdd_167, "ap_sig_bdd_167");
    sc_trace(mVcdFile, state_addr_9_gep_fu_154_p3, "state_addr_9_gep_fu_154_p3");
    sc_trace(mVcdFile, state_addr_9_reg_563, "state_addr_9_reg_563");
    sc_trace(mVcdFile, state_load_8_reg_568, "state_load_8_reg_568");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st10_fsm_9, "ap_sig_cseq_ST_st10_fsm_9");
    sc_trace(mVcdFile, ap_sig_bdd_177, "ap_sig_bdd_177");
    sc_trace(mVcdFile, state_load_9_reg_579, "state_load_9_reg_579");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st11_fsm_10, "ap_sig_cseq_ST_st11_fsm_10");
    sc_trace(mVcdFile, ap_sig_bdd_187, "ap_sig_bdd_187");
    sc_trace(mVcdFile, state_addr_11_gep_fu_172_p3, "state_addr_11_gep_fu_172_p3");
    sc_trace(mVcdFile, state_addr_11_reg_585, "state_addr_11_reg_585");
    sc_trace(mVcdFile, tmp3_fu_295_p2, "tmp3_fu_295_p2");
    sc_trace(mVcdFile, tmp3_reg_590, "tmp3_reg_590");
    sc_trace(mVcdFile, tmp_3_fu_306_p2, "tmp_3_fu_306_p2");
    sc_trace(mVcdFile, tmp_3_reg_595, "tmp_3_reg_595");
    sc_trace(mVcdFile, tmp_5_fu_316_p2, "tmp_5_fu_316_p2");
    sc_trace(mVcdFile, tmp_5_reg_601, "tmp_5_reg_601");
    sc_trace(mVcdFile, tmp7_fu_335_p2, "tmp7_fu_335_p2");
    sc_trace(mVcdFile, tmp7_reg_612, "tmp7_reg_612");
    sc_trace(mVcdFile, grp_fu_268_p2, "grp_fu_268_p2");
    sc_trace(mVcdFile, tmp6_reg_622, "tmp6_reg_622");
    sc_trace(mVcdFile, z_assign_fu_341_p2, "z_assign_fu_341_p2");
    sc_trace(mVcdFile, z_assign_reg_632, "z_assign_reg_632");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st15_fsm_14, "ap_sig_cseq_ST_st15_fsm_14");
    sc_trace(mVcdFile, ap_sig_bdd_214, "ap_sig_bdd_214");
    sc_trace(mVcdFile, y_assign_fu_346_p2, "y_assign_fu_346_p2");
    sc_trace(mVcdFile, y_assign_reg_637, "y_assign_reg_637");
    sc_trace(mVcdFile, tmp_i_i_fu_384_p2, "tmp_i_i_fu_384_p2");
    sc_trace(mVcdFile, tmp_i_i_reg_642, "tmp_i_i_reg_642");
    sc_trace(mVcdFile, tmp_25_fu_390_p1, "tmp_25_fu_390_p1");
    sc_trace(mVcdFile, tmp_25_reg_647, "tmp_25_reg_647");
    sc_trace(mVcdFile, tmp_1_i_i_fu_400_p2, "tmp_1_i_i_fu_400_p2");
    sc_trace(mVcdFile, tmp_1_i_i_reg_657, "tmp_1_i_i_reg_657");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st16_fsm_15, "ap_sig_cseq_ST_st16_fsm_15");
    sc_trace(mVcdFile, ap_sig_bdd_231, "ap_sig_bdd_231");
    sc_trace(mVcdFile, tmp_2_i_i_fu_406_p2, "tmp_2_i_i_fu_406_p2");
    sc_trace(mVcdFile, tmp_2_i_i_reg_662, "tmp_2_i_i_reg_662");
    sc_trace(mVcdFile, ciphertextbit_cast_fu_412_p1, "ciphertextbit_cast_fu_412_p1");
    sc_trace(mVcdFile, ciphertextbit_cast_reg_667, "ciphertextbit_cast_reg_667");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st21_fsm_20, "ap_sig_cseq_ST_st21_fsm_20");
    sc_trace(mVcdFile, ap_sig_bdd_242, "ap_sig_bdd_242");
    sc_trace(mVcdFile, tmp_1_i_fu_416_p2, "tmp_1_i_fu_416_p2");
    sc_trace(mVcdFile, tmp_1_i_reg_672, "tmp_1_i_reg_672");
    sc_trace(mVcdFile, tmp_2_i_fu_421_p2, "tmp_2_i_fu_421_p2");
    sc_trace(mVcdFile, tmp_2_i_reg_677, "tmp_2_i_reg_677");
    sc_trace(mVcdFile, j_1_fu_432_p2, "j_1_fu_432_p2");
    sc_trace(mVcdFile, j_1_reg_685, "j_1_reg_685");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st22_fsm_21, "ap_sig_cseq_ST_st22_fsm_21");
    sc_trace(mVcdFile, ap_sig_bdd_255, "ap_sig_bdd_255");
    sc_trace(mVcdFile, exitcond_fu_426_p2, "exitcond_fu_426_p2");
    sc_trace(mVcdFile, j_reg_243, "j_reg_243");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st23_fsm_22, "ap_sig_cseq_ST_st23_fsm_22");
    sc_trace(mVcdFile, ap_sig_bdd_271, "ap_sig_bdd_271");
    sc_trace(mVcdFile, tmp_6_fu_438_p1, "tmp_6_fu_438_p1");
    sc_trace(mVcdFile, tmp_7_fu_489_p1, "tmp_7_fu_489_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st17_fsm_16, "ap_sig_cseq_ST_st17_fsm_16");
    sc_trace(mVcdFile, ap_sig_bdd_317, "ap_sig_bdd_317");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st18_fsm_17, "ap_sig_cseq_ST_st18_fsm_17");
    sc_trace(mVcdFile, ap_sig_bdd_325, "ap_sig_bdd_325");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st19_fsm_18, "ap_sig_cseq_ST_st19_fsm_18");
    sc_trace(mVcdFile, ap_sig_bdd_333, "ap_sig_bdd_333");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st20_fsm_19, "ap_sig_cseq_ST_st20_fsm_19");
    sc_trace(mVcdFile, ap_sig_bdd_341, "ap_sig_bdd_341");
    sc_trace(mVcdFile, tmp_4_fu_482_p2, "tmp_4_fu_482_p2");
    sc_trace(mVcdFile, tmp1_fu_278_p2, "tmp1_fu_278_p2");
    sc_trace(mVcdFile, tmp4_fu_301_p2, "tmp4_fu_301_p2");
    sc_trace(mVcdFile, tmp5_fu_311_p2, "tmp5_fu_311_p2");
    sc_trace(mVcdFile, tmp_4_i_i_i_fu_325_p2, "tmp_4_i_i_i_fu_325_p2");
    sc_trace(mVcdFile, tmp_i9_i_i_fu_321_p2, "tmp_i9_i_i_fu_321_p2");
    sc_trace(mVcdFile, tmp_5_i_i_i_fu_330_p2, "tmp_5_i_i_i_fu_330_p2");
    sc_trace(mVcdFile, tmp_i_i_i_fu_351_p2, "tmp_i_i_i_fu_351_p2");
    sc_trace(mVcdFile, tmp_1_i_i_i_fu_357_p2, "tmp_1_i_i_i_fu_357_p2");
    sc_trace(mVcdFile, tmp_fu_368_p2, "tmp_fu_368_p2");
    sc_trace(mVcdFile, tmp_2_i_i_i_fu_362_p2, "tmp_2_i_i_i_fu_362_p2");
    sc_trace(mVcdFile, tmp8_fu_380_p2, "tmp8_fu_380_p2");
    sc_trace(mVcdFile, tmp9_fu_374_p2, "tmp9_fu_374_p2");
    sc_trace(mVcdFile, tmp_i_i_2_fu_394_p2, "tmp_i_i_2_fu_394_p2");
    sc_trace(mVcdFile, tmp11_fu_447_p2, "tmp11_fu_447_p2");
    sc_trace(mVcdFile, tmp15_cast_fu_451_p1, "tmp15_cast_fu_451_p1");
    sc_trace(mVcdFile, tmp10_fu_443_p2, "tmp10_fu_443_p2");
    sc_trace(mVcdFile, tmp14_fu_465_p2, "tmp14_fu_465_p2");
    sc_trace(mVcdFile, tmp15_fu_471_p2, "tmp15_fu_471_p2");
    sc_trace(mVcdFile, tmp13_fu_461_p2, "tmp13_fu_461_p2");
    sc_trace(mVcdFile, tmp16_fu_476_p2, "tmp16_fu_476_p2");
    sc_trace(mVcdFile, tmp12_fu_455_p2, "tmp12_fu_455_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::~acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st23_fsm_22.read())) {
        j_reg_243 = j_1_reg_685.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        j_reg_243 = ap_const_lv9_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        ciphertextbit_cast_reg_667 = ciphertextbit_cast_fu_412_p1.read();
        tmp_1_i_reg_672 = tmp_1_i_fu_416_p2.read();
        tmp_2_i_reg_677 = tmp_2_i_fu_421_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st22_fsm_21.read())) {
        j_1_reg_685 = j_1_fu_432_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read()))) {
        reg_256 = state_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()))) {
        reg_260 = state_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()))) {
        reg_264 = state_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        state_addr_11_reg_585 = state_addr_11_gep_fu_172_p3.read();
        state_load_9_reg_579 = state_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        state_addr_2_reg_505 = state_addr_2_gep_fu_91_p3.read();
        state_load_reg_499 = state_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        state_addr_3_reg_510 = state_addr_3_gep_fu_100_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        state_addr_5_reg_525 = state_addr_5_gep_fu_118_p3.read();
        tmp_24_reg_520 = tmp_24_fu_274_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        state_addr_7_reg_547 = state_addr_7_gep_fu_136_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read())) {
        state_addr_9_reg_563 = state_addr_9_gep_fu_154_p3.read();
        state_load_7_reg_557 = state_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        state_load_8_reg_568 = state_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
        tmp3_reg_590 = tmp3_fu_295_p2.read();
        tmp7_reg_612 = tmp7_fu_335_p2.read();
        tmp_3_reg_595 = tmp_3_fu_306_p2.read();
        tmp_5_reg_601 = tmp_5_fu_316_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read())) {
        tmp6_reg_622 = grp_fu_268_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read())) {
        tmp_1_i_i_reg_657 = tmp_1_i_i_fu_400_p2.read();
        tmp_2_i_i_reg_662 = tmp_2_i_i_fu_406_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read())) {
        tmp_25_reg_647 = tmp_25_fu_390_p1.read();
        tmp_i_i_reg_642 = tmp_i_i_fu_384_p2.read();
        y_assign_reg_637 = y_assign_fu_346_p2.read();
        z_assign_reg_632 = z_assign_fu_341_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        tmp_s_reg_530 = tmp_s_fu_283_p2.read();
        x_assign_1_reg_535 = x_assign_1_fu_289_p2.read();
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_done() {
    if (((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st22_fsm_21.read()) && 
          !esl_seteq<1,1,1>(exitcond_fu_426_p2.read(), ap_const_lv1_0)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st22_fsm_21.read()) && 
         !esl_seteq<1,1,1>(exitcond_fu_426_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_bdd_101() {
    ap_sig_bdd_101 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_bdd_110() {
    ap_sig_bdd_110 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_bdd_117() {
    ap_sig_bdd_117 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_bdd_125() {
    ap_sig_bdd_125 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(12, 12));
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_bdd_139() {
    ap_sig_bdd_139 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_bdd_167() {
    ap_sig_bdd_167 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(8, 8));
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_bdd_177() {
    ap_sig_bdd_177 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(9, 9));
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_bdd_187() {
    ap_sig_bdd_187 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(10, 10));
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_bdd_214() {
    ap_sig_bdd_214 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(14, 14));
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_bdd_231() {
    ap_sig_bdd_231 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(15, 15));
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_bdd_242() {
    ap_sig_bdd_242 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(20, 20));
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_bdd_255() {
    ap_sig_bdd_255 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(21, 21));
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_bdd_271() {
    ap_sig_bdd_271 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(22, 22));
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_bdd_317() {
    ap_sig_bdd_317 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(16, 16));
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_bdd_325() {
    ap_sig_bdd_325 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(17, 17));
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_bdd_333() {
    ap_sig_bdd_333 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(18, 18));
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_bdd_341() {
    ap_sig_bdd_341 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(19, 19));
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_bdd_41() {
    ap_sig_bdd_41 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_bdd_62() {
    ap_sig_bdd_62 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_bdd_69() {
    ap_sig_bdd_69 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_bdd_77() {
    ap_sig_bdd_77 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(11, 11));
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_bdd_85() {
    ap_sig_bdd_85 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(13, 13));
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_bdd_94() {
    ap_sig_bdd_94 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_cseq_ST_st10_fsm_9() {
    if (ap_sig_bdd_177.read()) {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_cseq_ST_st11_fsm_10() {
    if (ap_sig_bdd_187.read()) {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_cseq_ST_st12_fsm_11() {
    if (ap_sig_bdd_77.read()) {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_cseq_ST_st13_fsm_12() {
    if (ap_sig_bdd_125.read()) {
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_cseq_ST_st14_fsm_13() {
    if (ap_sig_bdd_85.read()) {
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_cseq_ST_st15_fsm_14() {
    if (ap_sig_bdd_214.read()) {
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_cseq_ST_st16_fsm_15() {
    if (ap_sig_bdd_231.read()) {
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_cseq_ST_st17_fsm_16() {
    if (ap_sig_bdd_317.read()) {
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_cseq_ST_st18_fsm_17() {
    if (ap_sig_bdd_325.read()) {
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_cseq_ST_st19_fsm_18() {
    if (ap_sig_bdd_333.read()) {
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_41.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_cseq_ST_st20_fsm_19() {
    if (ap_sig_bdd_341.read()) {
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_cseq_ST_st21_fsm_20() {
    if (ap_sig_bdd_242.read()) {
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_cseq_ST_st22_fsm_21() {
    if (ap_sig_bdd_255.read()) {
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_cseq_ST_st23_fsm_22() {
    if (ap_sig_bdd_271.read()) {
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_139.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_bdd_62.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_bdd_94.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_bdd_110.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_bdd_69.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_cseq_ST_st7_fsm_6() {
    if (ap_sig_bdd_101.read()) {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_cseq_ST_st8_fsm_7() {
    if (ap_sig_bdd_117.read()) {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_sig_cseq_ST_st9_fsm_8() {
    if (ap_sig_bdd_167.read()) {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ciphertextbit_cast_fu_412_p1() {
    ciphertextbit_cast_fu_412_p1 = esl_zext<8,1>(ciphertextbit.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_exitcond_fu_426_p2() {
    exitcond_fu_426_p2 = (!j_reg_243.read().is_01() || !ap_const_lv9_124.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_243.read() == ap_const_lv9_124);
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_grp_fu_268_p2() {
    grp_fu_268_p2 = (reg_256.read() ^ state_q0.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_j_1_fu_432_p2() {
    j_1_fu_432_p2 = (!j_reg_243.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(j_reg_243.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_state_addr_11_gep_fu_172_p3() {
    state_addr_11_gep_fu_172_p3 =  (sc_lv<9>) (ap_const_lv64_3D);
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_state_addr_2_gep_fu_91_p3() {
    state_addr_2_gep_fu_91_p3 =  (sc_lv<9>) (ap_const_lv64_E6);
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_state_addr_3_gep_fu_100_p3() {
    state_addr_3_gep_fu_100_p3 =  (sc_lv<9>) (ap_const_lv64_121);
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_state_addr_5_gep_fu_118_p3() {
    state_addr_5_gep_fu_118_p3 =  (sc_lv<9>) (ap_const_lv64_C1);
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_state_addr_7_gep_fu_136_p3() {
    state_addr_7_gep_fu_136_p3 =  (sc_lv<9>) (ap_const_lv64_9A);
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_state_addr_9_gep_fu_154_p3() {
    state_addr_9_gep_fu_154_p3 =  (sc_lv<9>) (ap_const_lv64_6B);
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_state_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st23_fsm_22.read())) {
        state_address0 =  (sc_lv<9>) (tmp_7_fu_489_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st22_fsm_21.read()) && 
                !esl_seteq<1,1,1>(exitcond_fu_426_p2.read(), ap_const_lv1_0))) {
        state_address0 =  (sc_lv<9>) (ap_const_lv64_124);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        state_address0 = state_addr_11_reg_585.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        state_address0 = state_addr_9_reg_563.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_18.read())) {
        state_address0 = state_addr_7_reg_547.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read())) {
        state_address0 = state_addr_5_reg_525.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read())) {
        state_address0 = state_addr_2_reg_505.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read())) {
        state_address0 = state_addr_3_reg_510.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st22_fsm_21.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_426_p2.read(), ap_const_lv1_0))) {
        state_address0 =  (sc_lv<9>) (tmp_6_fu_438_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read())) {
        state_address0 =  (sc_lv<9>) (ap_const_lv64_F4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read())) {
        state_address0 =  (sc_lv<9>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read())) {
        state_address0 =  (sc_lv<9>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
        state_address0 =  (sc_lv<9>) (ap_const_lv64_17);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        state_address0 =  (sc_lv<9>) (ap_const_lv64_3D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        state_address0 =  (sc_lv<9>) (ap_const_lv64_42);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read())) {
        state_address0 =  (sc_lv<9>) (ap_const_lv64_6B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        state_address0 =  (sc_lv<9>) (ap_const_lv64_6F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        state_address0 =  (sc_lv<9>) (ap_const_lv64_9A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        state_address0 =  (sc_lv<9>) (ap_const_lv64_A0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        state_address0 =  (sc_lv<9>) (ap_const_lv64_C1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        state_address0 =  (sc_lv<9>) (ap_const_lv64_C4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        state_address0 =  (sc_lv<9>) (ap_const_lv64_121);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        state_address0 =  (sc_lv<9>) (ap_const_lv64_E6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) {
        state_address0 =  (sc_lv<9>) (ap_const_lv64_EB);
    } else {
        state_address0 = "XXXXXXXXX";
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_state_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
          !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st22_fsm_21.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_426_p2.read(), ap_const_lv1_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st23_fsm_22.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st22_fsm_21.read()) && 
          !esl_seteq<1,1,1>(exitcond_fu_426_p2.read(), ap_const_lv1_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read()))) {
        state_ce0 = ap_const_logic_1;
    } else {
        state_ce0 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_state_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st23_fsm_22.read())) {
        state_d0 = state_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st22_fsm_21.read()) && 
                !esl_seteq<1,1,1>(exitcond_fu_426_p2.read(), ap_const_lv1_0))) {
        state_d0 = tmp_4_fu_482_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        state_d0 = y_assign_reg_637.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        state_d0 = tmp_5_reg_601.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_18.read())) {
        state_d0 = tmp_3_reg_595.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read())) {
        state_d0 = z_assign_reg_632.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read())) {
        state_d0 = x_assign_1_reg_535.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read())) {
        state_d0 = tmp_s_reg_530.read();
    } else {
        state_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_state_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st23_fsm_22.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st22_fsm_21.read()) && 
          !esl_seteq<1,1,1>(exitcond_fu_426_p2.read(), ap_const_lv1_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read()))) {
        state_we0 = ap_const_logic_1;
    } else {
        state_we0 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp10_fu_443_p2() {
    tmp10_fu_443_p2 = (tmp_i_i_reg_642.read() ^ ciphertextbit_cast_reg_667.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp11_fu_447_p2() {
    tmp11_fu_447_p2 = (tmp_2_i_reg_677.read() ^ tmp_1_i_reg_672.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp12_fu_455_p2() {
    tmp12_fu_455_p2 = (tmp15_cast_fu_451_p1.read() ^ tmp10_fu_443_p2.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp13_fu_461_p2() {
    tmp13_fu_461_p2 = (tmp_2_i_i_reg_662.read() ^ tmp_1_i_i_reg_657.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp14_fu_465_p2() {
    tmp14_fu_465_p2 = (reg_256.read() ^ ap_const_lv8_1);
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp15_cast_fu_451_p1() {
    tmp15_cast_fu_451_p1 = esl_zext<8,1>(tmp11_fu_447_p2.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp15_fu_471_p2() {
    tmp15_fu_471_p2 = (tmp14_fu_465_p2.read() ^ tmp_5_reg_601.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp16_fu_476_p2() {
    tmp16_fu_476_p2 = (tmp15_fu_471_p2.read() ^ tmp13_fu_461_p2.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp1_fu_278_p2() {
    tmp1_fu_278_p2 = (state_load_reg_499.read() ^ reg_260.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp3_fu_295_p2() {
    tmp3_fu_295_p2 = (reg_256.read() ^ reg_264.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp4_fu_301_p2() {
    tmp4_fu_301_p2 = (reg_264.read() ^ state_load_8_reg_568.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp5_fu_311_p2() {
    tmp5_fu_311_p2 = (state_load_8_reg_568.read() ^ state_q0.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp7_fu_335_p2() {
    tmp7_fu_335_p2 = (tmp_i9_i_i_fu_321_p2.read() ^ tmp_5_i_i_i_fu_330_p2.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp8_fu_380_p2() {
    tmp8_fu_380_p2 = (tmp7_reg_612.read() ^ tmp_3_reg_595.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp9_fu_374_p2() {
    tmp9_fu_374_p2 = (tmp_fu_368_p2.read() ^ tmp_2_i_i_i_fu_362_p2.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp_1_i_fu_416_p2() {
    tmp_1_i_fu_416_p2 = (tmp_24_reg_520.read() & ca.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp_1_i_i_fu_400_p2() {
    tmp_1_i_i_fu_400_p2 = (tmp_i_i_2_fu_394_p2.read() & state_q0.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp_1_i_i_i_fu_357_p2() {
    tmp_1_i_i_i_fu_357_p2 = (tmp_i_i_i_fu_351_p2.read() & state_load_reg_499.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp_24_fu_274_p1() {
    tmp_24_fu_274_p1 = state_q0.read().range(1-1, 0);
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp_25_fu_390_p1() {
    tmp_25_fu_390_p1 = tmp_i_i_fu_384_p2.read().range(1-1, 0);
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp_2_i_fu_421_p2() {
    tmp_2_i_fu_421_p2 = (tmp_25_reg_647.read() & cb.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp_2_i_i_fu_406_p2() {
    tmp_2_i_i_fu_406_p2 = (reg_260.read() & reg_264.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp_2_i_i_i_fu_362_p2() {
    tmp_2_i_i_i_fu_362_p2 = (z_assign_fu_341_p2.read() & y_assign_fu_346_p2.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp_3_fu_306_p2() {
    tmp_3_fu_306_p2 = (tmp4_fu_301_p2.read() ^ state_load_7_reg_557.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp_4_fu_482_p2() {
    tmp_4_fu_482_p2 = (tmp16_fu_476_p2.read() ^ tmp12_fu_455_p2.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp_4_i_i_i_fu_325_p2() {
    tmp_4_i_i_i_fu_325_p2 = (x_assign_1_reg_535.read() ^ ap_const_lv8_1);
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp_5_fu_316_p2() {
    tmp_5_fu_316_p2 = (tmp5_fu_311_p2.read() ^ state_load_9_reg_579.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp_5_i_i_i_fu_330_p2() {
    tmp_5_i_i_i_fu_330_p2 = (tmp_4_i_i_i_fu_325_p2.read() & state_load_9_reg_579.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp_6_fu_438_p1() {
    tmp_6_fu_438_p1 = esl_zext<64,9>(j_1_fu_432_p2.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp_7_fu_489_p1() {
    tmp_7_fu_489_p1 = esl_zext<64,9>(j_reg_243.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp_fu_368_p2() {
    tmp_fu_368_p2 = (tmp_1_i_i_i_fu_357_p2.read() ^ state_q0.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp_i9_i_i_fu_321_p2() {
    tmp_i9_i_i_fu_321_p2 = (state_load_7_reg_557.read() & x_assign_1_reg_535.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp_i_i_2_fu_394_p2() {
    tmp_i_i_2_fu_394_p2 = (reg_260.read() ^ reg_264.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp_i_i_fu_384_p2() {
    tmp_i_i_fu_384_p2 = (tmp8_fu_380_p2.read() ^ tmp9_fu_374_p2.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp_i_i_i_fu_351_p2() {
    tmp_i_i_i_fu_351_p2 = (z_assign_fu_341_p2.read() ^ y_assign_fu_346_p2.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_tmp_s_fu_283_p2() {
    tmp_s_fu_283_p2 = (tmp1_fu_278_p2.read() ^ reg_256.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_x_assign_1_fu_289_p2() {
    x_assign_1_fu_289_p2 = (grp_fu_268_p2.read() ^ reg_264.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_y_assign_fu_346_p2() {
    y_assign_fu_346_p2 = (tmp6_reg_622.read() ^ reg_264.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_z_assign_fu_341_p2() {
    z_assign_fu_341_p2 = (tmp3_reg_590.read() ^ reg_260.read());
}

void acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_st20_fsm_19;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_st22_fsm_21;
            break;
        case 2097152 : 
            if (!esl_seteq<1,1,1>(exitcond_fu_426_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st23_fsm_22;
            }
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_st22_fsm_21;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<23>) ("XXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}


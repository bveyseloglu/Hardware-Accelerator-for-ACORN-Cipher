// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "acorn128_dec_onebyte.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic acorn128_dec_onebyte::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic acorn128_dec_onebyte::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<16> acorn128_dec_onebyte::ap_ST_st1_fsm_0 = "1";
const sc_lv<16> acorn128_dec_onebyte::ap_ST_st2_fsm_1 = "10";
const sc_lv<16> acorn128_dec_onebyte::ap_ST_st3_fsm_2 = "100";
const sc_lv<16> acorn128_dec_onebyte::ap_ST_st4_fsm_3 = "1000";
const sc_lv<16> acorn128_dec_onebyte::ap_ST_st5_fsm_4 = "10000";
const sc_lv<16> acorn128_dec_onebyte::ap_ST_st6_fsm_5 = "100000";
const sc_lv<16> acorn128_dec_onebyte::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<16> acorn128_dec_onebyte::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<16> acorn128_dec_onebyte::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<16> acorn128_dec_onebyte::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<16> acorn128_dec_onebyte::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<16> acorn128_dec_onebyte::ap_ST_st12_fsm_11 = "100000000000";
const sc_lv<16> acorn128_dec_onebyte::ap_ST_st13_fsm_12 = "1000000000000";
const sc_lv<16> acorn128_dec_onebyte::ap_ST_st14_fsm_13 = "10000000000000";
const sc_lv<16> acorn128_dec_onebyte::ap_ST_st15_fsm_14 = "100000000000000";
const sc_lv<16> acorn128_dec_onebyte::ap_ST_st16_fsm_15 = "1000000000000000";
const sc_lv<32> acorn128_dec_onebyte::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> acorn128_dec_onebyte::ap_const_lv1_1 = "1";
const int acorn128_dec_onebyte::C_DATA_WIDTH = "100000";
const sc_lv<32> acorn128_dec_onebyte::ap_const_lv32_2 = "10";
const sc_lv<32> acorn128_dec_onebyte::ap_const_lv32_4 = "100";
const sc_lv<32> acorn128_dec_onebyte::ap_const_lv32_6 = "110";
const sc_lv<32> acorn128_dec_onebyte::ap_const_lv32_8 = "1000";
const sc_lv<32> acorn128_dec_onebyte::ap_const_lv32_A = "1010";
const sc_lv<32> acorn128_dec_onebyte::ap_const_lv32_C = "1100";
const sc_lv<32> acorn128_dec_onebyte::ap_const_lv32_E = "1110";
const sc_lv<32> acorn128_dec_onebyte::ap_const_lv32_1 = "1";
const sc_lv<32> acorn128_dec_onebyte::ap_const_lv32_3 = "11";
const sc_lv<32> acorn128_dec_onebyte::ap_const_lv32_5 = "101";
const sc_lv<32> acorn128_dec_onebyte::ap_const_lv32_7 = "111";
const sc_lv<32> acorn128_dec_onebyte::ap_const_lv32_9 = "1001";
const sc_lv<32> acorn128_dec_onebyte::ap_const_lv32_B = "1011";
const sc_lv<32> acorn128_dec_onebyte::ap_const_lv32_D = "1101";
const sc_lv<32> acorn128_dec_onebyte::ap_const_lv32_F = "1111";

acorn128_dec_onebyte::acorn128_dec_onebyte(sc_module_name name) : sc_module(name), mVcdFile(0) {
    acorn128_dec_onebyte_AXILiteS_s_axi_U = new acorn128_dec_onebyte_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("acorn128_dec_onebyte_AXILiteS_s_axi_U");
    acorn128_dec_onebyte_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->ACLK(ap_clk);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->ACLK_EN(acorn128_dec_onebyte_AXILiteS_s_axi_U_ap_dummy_ce);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->ap_start(ap_start);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->interrupt(interrupt);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->ap_ready(ap_ready);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->ap_done(ap_done);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->ap_idle(ap_idle);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->ap_return(ap_return);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->state_address0(state_address0);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->state_ce0(state_ce0);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->state_we0(state_we0);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->state_d0(state_d0);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->state_q0(state_q0);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->plaintextbyte(plaintextbyte);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->ciphertextbyte(ciphertextbyte);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->ksbyte(ksbyte);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->cabyte(cabyte);
    acorn128_dec_onebyte_AXILiteS_s_axi_U->cbbyte(cbbyte);
    grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73 = new acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit("grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73");
    grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73->ap_clk(ap_clk);
    grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73->ap_rst(ap_rst_n_inv);
    grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73->ap_start(grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_start);
    grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73->ap_done(grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_done);
    grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73->ap_idle(grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_idle);
    grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73->ap_ready(grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_ready);
    grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73->state_address0(grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_address0);
    grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73->state_ce0(grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_ce0);
    grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73->state_we0(grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_we0);
    grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73->state_d0(grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_d0);
    grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73->state_q0(grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_q0);
    grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73->ciphertextbit(grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ciphertextbit);
    grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73->ca(grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ca);
    grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73->cb(grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_cb);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_acorn128_dec_onebyte_AXILiteS_s_axi_U_ap_dummy_ce);

    SC_METHOD(thread_ap_done);
    sensitive << ( grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_done );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_done );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );

    SC_METHOD(thread_ap_return);
    sensitive << ( grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_done );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_bdd_162);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_170);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_178);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_186);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_194);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_202);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_210);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_218);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_225);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_233);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_241);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_249);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_257);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_265);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_273);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_57);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st10_fsm_9);
    sensitive << ( ap_sig_bdd_249 );

    SC_METHOD(thread_ap_sig_cseq_ST_st11_fsm_10);
    sensitive << ( ap_sig_bdd_194 );

    SC_METHOD(thread_ap_sig_cseq_ST_st12_fsm_11);
    sensitive << ( ap_sig_bdd_257 );

    SC_METHOD(thread_ap_sig_cseq_ST_st13_fsm_12);
    sensitive << ( ap_sig_bdd_202 );

    SC_METHOD(thread_ap_sig_cseq_ST_st14_fsm_13);
    sensitive << ( ap_sig_bdd_265 );

    SC_METHOD(thread_ap_sig_cseq_ST_st15_fsm_14);
    sensitive << ( ap_sig_bdd_210 );

    SC_METHOD(thread_ap_sig_cseq_ST_st16_fsm_15);
    sensitive << ( ap_sig_bdd_273 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_57 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_218 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_bdd_162 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_bdd_225 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_bdd_170 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_bdd_233 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_6);
    sensitive << ( ap_sig_bdd_178 );

    SC_METHOD(thread_ap_sig_cseq_ST_st8_fsm_7);
    sensitive << ( ap_sig_bdd_241 );

    SC_METHOD(thread_ap_sig_cseq_ST_st9_fsm_8);
    sensitive << ( ap_sig_bdd_186 );

    SC_METHOD(thread_grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_start);
    sensitive << ( grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_start_ap_start_reg );

    SC_METHOD(thread_grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ca);
    sensitive << ( tmp_reg_265 );
    sensitive << ( tmp_3_reg_280 );
    sensitive << ( tmp_6_reg_295 );
    sensitive << ( tmp_9_reg_310 );
    sensitive << ( tmp_12_reg_325 );
    sensitive << ( tmp_15_reg_340 );
    sensitive << ( tmp_18_reg_355 );
    sensitive << ( tmp_22_reg_375 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );

    SC_METHOD(thread_grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_cb);
    sensitive << ( tmp_1_reg_270 );
    sensitive << ( tmp_4_reg_285 );
    sensitive << ( tmp_7_reg_300 );
    sensitive << ( tmp_10_reg_315 );
    sensitive << ( tmp_13_reg_330 );
    sensitive << ( tmp_16_reg_345 );
    sensitive << ( tmp_19_reg_360 );
    sensitive << ( tmp_23_reg_380 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );

    SC_METHOD(thread_grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ciphertextbit);
    sensitive << ( tmp_2_reg_275 );
    sensitive << ( tmp_5_reg_290 );
    sensitive << ( tmp_8_reg_305 );
    sensitive << ( tmp_11_reg_320 );
    sensitive << ( tmp_14_reg_335 );
    sensitive << ( tmp_17_reg_350 );
    sensitive << ( tmp_20_reg_365 );
    sensitive << ( tmp_21_reg_370 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );

    SC_METHOD(thread_grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_q0);
    sensitive << ( state_q0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );

    SC_METHOD(thread_state_address0);
    sensitive << ( grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_address0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );

    SC_METHOD(thread_state_ce0);
    sensitive << ( grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_ce0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );

    SC_METHOD(thread_state_d0);
    sensitive << ( grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_d0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );

    SC_METHOD(thread_state_we0);
    sensitive << ( grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_we0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );

    SC_METHOD(thread_tmp_1_fu_87_p1);
    sensitive << ( cbbyte );

    SC_METHOD(thread_tmp_2_fu_92_p1);
    sensitive << ( ciphertextbyte );

    SC_METHOD(thread_tmp_fu_82_p1);
    sensitive << ( cabyte );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_done );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0000000000000001";
    grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_start_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "acorn128_dec_onebyte_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_57, "ap_sig_bdd_57");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, state_address0, "state_address0");
    sc_trace(mVcdFile, state_ce0, "state_ce0");
    sc_trace(mVcdFile, state_we0, "state_we0");
    sc_trace(mVcdFile, state_d0, "state_d0");
    sc_trace(mVcdFile, state_q0, "state_q0");
    sc_trace(mVcdFile, plaintextbyte, "plaintextbyte");
    sc_trace(mVcdFile, ciphertextbyte, "ciphertextbyte");
    sc_trace(mVcdFile, ksbyte, "ksbyte");
    sc_trace(mVcdFile, cabyte, "cabyte");
    sc_trace(mVcdFile, cbbyte, "cbbyte");
    sc_trace(mVcdFile, ap_return, "ap_return");
    sc_trace(mVcdFile, acorn128_dec_onebyte_AXILiteS_s_axi_U_ap_dummy_ce, "acorn128_dec_onebyte_AXILiteS_s_axi_U_ap_dummy_ce");
    sc_trace(mVcdFile, tmp_fu_82_p1, "tmp_fu_82_p1");
    sc_trace(mVcdFile, tmp_reg_265, "tmp_reg_265");
    sc_trace(mVcdFile, tmp_1_fu_87_p1, "tmp_1_fu_87_p1");
    sc_trace(mVcdFile, tmp_1_reg_270, "tmp_1_reg_270");
    sc_trace(mVcdFile, tmp_2_fu_92_p1, "tmp_2_fu_92_p1");
    sc_trace(mVcdFile, tmp_2_reg_275, "tmp_2_reg_275");
    sc_trace(mVcdFile, tmp_3_reg_280, "tmp_3_reg_280");
    sc_trace(mVcdFile, tmp_4_reg_285, "tmp_4_reg_285");
    sc_trace(mVcdFile, tmp_5_reg_290, "tmp_5_reg_290");
    sc_trace(mVcdFile, tmp_6_reg_295, "tmp_6_reg_295");
    sc_trace(mVcdFile, tmp_7_reg_300, "tmp_7_reg_300");
    sc_trace(mVcdFile, tmp_8_reg_305, "tmp_8_reg_305");
    sc_trace(mVcdFile, tmp_9_reg_310, "tmp_9_reg_310");
    sc_trace(mVcdFile, tmp_10_reg_315, "tmp_10_reg_315");
    sc_trace(mVcdFile, tmp_11_reg_320, "tmp_11_reg_320");
    sc_trace(mVcdFile, tmp_12_reg_325, "tmp_12_reg_325");
    sc_trace(mVcdFile, tmp_13_reg_330, "tmp_13_reg_330");
    sc_trace(mVcdFile, tmp_14_reg_335, "tmp_14_reg_335");
    sc_trace(mVcdFile, tmp_15_reg_340, "tmp_15_reg_340");
    sc_trace(mVcdFile, tmp_16_reg_345, "tmp_16_reg_345");
    sc_trace(mVcdFile, tmp_17_reg_350, "tmp_17_reg_350");
    sc_trace(mVcdFile, tmp_18_reg_355, "tmp_18_reg_355");
    sc_trace(mVcdFile, tmp_19_reg_360, "tmp_19_reg_360");
    sc_trace(mVcdFile, tmp_20_reg_365, "tmp_20_reg_365");
    sc_trace(mVcdFile, tmp_21_reg_370, "tmp_21_reg_370");
    sc_trace(mVcdFile, tmp_22_reg_375, "tmp_22_reg_375");
    sc_trace(mVcdFile, tmp_23_reg_380, "tmp_23_reg_380");
    sc_trace(mVcdFile, grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_start, "grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_start");
    sc_trace(mVcdFile, grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_done, "grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_done");
    sc_trace(mVcdFile, grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_idle, "grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_idle");
    sc_trace(mVcdFile, grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_ready, "grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_ready");
    sc_trace(mVcdFile, grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_address0, "grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_address0");
    sc_trace(mVcdFile, grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_ce0, "grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_ce0");
    sc_trace(mVcdFile, grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_we0, "grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_we0");
    sc_trace(mVcdFile, grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_d0, "grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_d0");
    sc_trace(mVcdFile, grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_q0, "grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_q0");
    sc_trace(mVcdFile, grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ciphertextbit, "grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ciphertextbit");
    sc_trace(mVcdFile, grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ca, "grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ca");
    sc_trace(mVcdFile, grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_cb, "grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_cb");
    sc_trace(mVcdFile, grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_start_ap_start_reg, "grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_start_ap_start_reg");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_162, "ap_sig_bdd_162");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_bdd_170, "ap_sig_bdd_170");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_6, "ap_sig_cseq_ST_st7_fsm_6");
    sc_trace(mVcdFile, ap_sig_bdd_178, "ap_sig_bdd_178");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st9_fsm_8, "ap_sig_cseq_ST_st9_fsm_8");
    sc_trace(mVcdFile, ap_sig_bdd_186, "ap_sig_bdd_186");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st11_fsm_10, "ap_sig_cseq_ST_st11_fsm_10");
    sc_trace(mVcdFile, ap_sig_bdd_194, "ap_sig_bdd_194");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st13_fsm_12, "ap_sig_cseq_ST_st13_fsm_12");
    sc_trace(mVcdFile, ap_sig_bdd_202, "ap_sig_bdd_202");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st15_fsm_14, "ap_sig_cseq_ST_st15_fsm_14");
    sc_trace(mVcdFile, ap_sig_bdd_210, "ap_sig_bdd_210");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_218, "ap_sig_bdd_218");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_225, "ap_sig_bdd_225");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_bdd_233, "ap_sig_bdd_233");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st8_fsm_7, "ap_sig_cseq_ST_st8_fsm_7");
    sc_trace(mVcdFile, ap_sig_bdd_241, "ap_sig_bdd_241");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st10_fsm_9, "ap_sig_cseq_ST_st10_fsm_9");
    sc_trace(mVcdFile, ap_sig_bdd_249, "ap_sig_bdd_249");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st12_fsm_11, "ap_sig_cseq_ST_st12_fsm_11");
    sc_trace(mVcdFile, ap_sig_bdd_257, "ap_sig_bdd_257");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st14_fsm_13, "ap_sig_cseq_ST_st14_fsm_13");
    sc_trace(mVcdFile, ap_sig_bdd_265, "ap_sig_bdd_265");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st16_fsm_15, "ap_sig_cseq_ST_st16_fsm_15");
    sc_trace(mVcdFile, ap_sig_bdd_273, "ap_sig_bdd_273");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("acorn128_dec_onebyte.hdltvin.dat");
    mHdltvoutHandle.open("acorn128_dec_onebyte.hdltvout.dat");
}

acorn128_dec_onebyte::~acorn128_dec_onebyte() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete acorn128_dec_onebyte_AXILiteS_s_axi_U;
    delete grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73;
}

void acorn128_dec_onebyte::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_start_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
              !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()))) {
            grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_start_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_ready.read())) {
            grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_start_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        tmp_10_reg_315 = cbbyte.read().range(3, 3);
        tmp_11_reg_320 = ciphertextbyte.read().range(3, 3);
        tmp_12_reg_325 = cabyte.read().range(4, 4);
        tmp_13_reg_330 = cbbyte.read().range(4, 4);
        tmp_14_reg_335 = ciphertextbyte.read().range(4, 4);
        tmp_15_reg_340 = cabyte.read().range(5, 5);
        tmp_16_reg_345 = cbbyte.read().range(5, 5);
        tmp_17_reg_350 = ciphertextbyte.read().range(5, 5);
        tmp_18_reg_355 = cabyte.read().range(6, 6);
        tmp_19_reg_360 = cbbyte.read().range(6, 6);
        tmp_1_reg_270 = tmp_1_fu_87_p1.read();
        tmp_20_reg_365 = ciphertextbyte.read().range(6, 6);
        tmp_21_reg_370 = ciphertextbyte.read().range(7, 7);
        tmp_22_reg_375 = cabyte.read().range(7, 7);
        tmp_23_reg_380 = cbbyte.read().range(7, 7);
        tmp_2_reg_275 = tmp_2_fu_92_p1.read();
        tmp_3_reg_280 = cabyte.read().range(1, 1);
        tmp_4_reg_285 = cbbyte.read().range(1, 1);
        tmp_5_reg_290 = ciphertextbyte.read().range(1, 1);
        tmp_6_reg_295 = cabyte.read().range(2, 2);
        tmp_7_reg_300 = cbbyte.read().range(2, 2);
        tmp_8_reg_305 = ciphertextbyte.read().range(2, 2);
        tmp_9_reg_310 = cabyte.read().range(3, 3);
        tmp_reg_265 = tmp_fu_82_p1.read();
    }
}

void acorn128_dec_onebyte::thread_acorn128_dec_onebyte_AXILiteS_s_axi_U_ap_dummy_ce() {
    acorn128_dec_onebyte_AXILiteS_s_axi_U_ap_dummy_ce = ap_const_logic_1;
}

void acorn128_dec_onebyte::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read()) && 
         !esl_seteq<1,1,1>(ap_const_logic_0, grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_done.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read()) && 
         !esl_seteq<1,1,1>(ap_const_logic_0, grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_done.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte::thread_ap_return() {
    ap_return = ap_const_lv32_0;
}

void acorn128_dec_onebyte::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void acorn128_dec_onebyte::thread_ap_sig_bdd_162() {
    ap_sig_bdd_162 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void acorn128_dec_onebyte::thread_ap_sig_bdd_170() {
    ap_sig_bdd_170 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void acorn128_dec_onebyte::thread_ap_sig_bdd_178() {
    ap_sig_bdd_178 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void acorn128_dec_onebyte::thread_ap_sig_bdd_186() {
    ap_sig_bdd_186 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(8, 8));
}

void acorn128_dec_onebyte::thread_ap_sig_bdd_194() {
    ap_sig_bdd_194 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(10, 10));
}

void acorn128_dec_onebyte::thread_ap_sig_bdd_202() {
    ap_sig_bdd_202 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(12, 12));
}

void acorn128_dec_onebyte::thread_ap_sig_bdd_210() {
    ap_sig_bdd_210 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(14, 14));
}

void acorn128_dec_onebyte::thread_ap_sig_bdd_218() {
    ap_sig_bdd_218 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void acorn128_dec_onebyte::thread_ap_sig_bdd_225() {
    ap_sig_bdd_225 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void acorn128_dec_onebyte::thread_ap_sig_bdd_233() {
    ap_sig_bdd_233 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void acorn128_dec_onebyte::thread_ap_sig_bdd_241() {
    ap_sig_bdd_241 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void acorn128_dec_onebyte::thread_ap_sig_bdd_249() {
    ap_sig_bdd_249 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(9, 9));
}

void acorn128_dec_onebyte::thread_ap_sig_bdd_257() {
    ap_sig_bdd_257 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(11, 11));
}

void acorn128_dec_onebyte::thread_ap_sig_bdd_265() {
    ap_sig_bdd_265 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(13, 13));
}

void acorn128_dec_onebyte::thread_ap_sig_bdd_273() {
    ap_sig_bdd_273 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(15, 15));
}

void acorn128_dec_onebyte::thread_ap_sig_bdd_57() {
    ap_sig_bdd_57 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void acorn128_dec_onebyte::thread_ap_sig_cseq_ST_st10_fsm_9() {
    if (ap_sig_bdd_249.read()) {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte::thread_ap_sig_cseq_ST_st11_fsm_10() {
    if (ap_sig_bdd_194.read()) {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte::thread_ap_sig_cseq_ST_st12_fsm_11() {
    if (ap_sig_bdd_257.read()) {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte::thread_ap_sig_cseq_ST_st13_fsm_12() {
    if (ap_sig_bdd_202.read()) {
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte::thread_ap_sig_cseq_ST_st14_fsm_13() {
    if (ap_sig_bdd_265.read()) {
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte::thread_ap_sig_cseq_ST_st15_fsm_14() {
    if (ap_sig_bdd_210.read()) {
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte::thread_ap_sig_cseq_ST_st16_fsm_15() {
    if (ap_sig_bdd_273.read()) {
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_57.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_218.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_bdd_162.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_bdd_225.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_bdd_170.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_bdd_233.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte::thread_ap_sig_cseq_ST_st7_fsm_6() {
    if (ap_sig_bdd_178.read()) {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte::thread_ap_sig_cseq_ST_st8_fsm_7() {
    if (ap_sig_bdd_241.read()) {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte::thread_ap_sig_cseq_ST_st9_fsm_8() {
    if (ap_sig_bdd_186.read()) {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte::thread_grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_start() {
    grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_start = grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_start_ap_start_reg.read();
}

void acorn128_dec_onebyte::thread_grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ca() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read())) {
        grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ca = tmp_22_reg_375.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read())) {
        grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ca = tmp_18_reg_355.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
        grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ca = tmp_15_reg_340.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ca = tmp_12_reg_325.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ca = tmp_9_reg_310.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ca = tmp_6_reg_295.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ca = tmp_3_reg_280.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ca = tmp_reg_265.read();
    } else {
        grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ca = "X";
    }
}

void acorn128_dec_onebyte::thread_grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_cb() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read())) {
        grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_cb = tmp_23_reg_380.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read())) {
        grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_cb = tmp_19_reg_360.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
        grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_cb = tmp_16_reg_345.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_cb = tmp_13_reg_330.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_cb = tmp_10_reg_315.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_cb = tmp_7_reg_300.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_cb = tmp_4_reg_285.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_cb = tmp_1_reg_270.read();
    } else {
        grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_cb = "X";
    }
}

void acorn128_dec_onebyte::thread_grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ciphertextbit() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read())) {
        grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ciphertextbit = tmp_21_reg_370.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read())) {
        grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ciphertextbit = tmp_20_reg_365.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
        grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ciphertextbit = tmp_17_reg_350.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ciphertextbit = tmp_14_reg_335.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ciphertextbit = tmp_11_reg_320.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ciphertextbit = tmp_8_reg_305.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ciphertextbit = tmp_5_reg_290.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ciphertextbit = tmp_2_reg_275.read();
    } else {
        grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ciphertextbit = "X";
    }
}

void acorn128_dec_onebyte::thread_grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_q0() {
    grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_q0 = state_q0.read();
}

void acorn128_dec_onebyte::thread_state_address0() {
    state_address0 = grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_address0.read();
}

void acorn128_dec_onebyte::thread_state_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read()))) {
        state_ce0 = grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_ce0.read();
    } else {
        state_ce0 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte::thread_state_d0() {
    state_d0 = grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_d0.read();
}

void acorn128_dec_onebyte::thread_state_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read()))) {
        state_we0 = grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_state_we0.read();
    } else {
        state_we0 = ap_const_logic_0;
    }
}

void acorn128_dec_onebyte::thread_tmp_1_fu_87_p1() {
    tmp_1_fu_87_p1 = cbbyte.read().range(1-1, 0);
}

void acorn128_dec_onebyte::thread_tmp_2_fu_92_p1() {
    tmp_2_fu_92_p1 = ciphertextbyte.read().range(1-1, 0);
}

void acorn128_dec_onebyte::thread_tmp_fu_82_p1() {
    tmp_fu_82_p1 = cabyte.read().range(1-1, 0);
}

void acorn128_dec_onebyte::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_done.read())) {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 8 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_done.read())) {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 32 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_done.read())) {
                ap_NS_fsm = ap_ST_st7_fsm_6;
            } else {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_done.read())) {
                ap_NS_fsm = ap_ST_st9_fsm_8;
            } else {
                ap_NS_fsm = ap_ST_st8_fsm_7;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 512 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_done.read())) {
                ap_NS_fsm = ap_ST_st11_fsm_10;
            } else {
                ap_NS_fsm = ap_ST_st10_fsm_9;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 2048 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_done.read())) {
                ap_NS_fsm = ap_ST_st13_fsm_12;
            } else {
                ap_NS_fsm = ap_ST_st12_fsm_11;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
            break;
        case 8192 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_done.read())) {
                ap_NS_fsm = ap_ST_st15_fsm_14;
            } else {
                ap_NS_fsm = ap_ST_st14_fsm_13;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
            break;
        case 32768 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_acorn128_dec_onebyte_Decrypt_StateUpdate128_1bit_fu_73_ap_done.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st16_fsm_15;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
            break;
    }
}

void acorn128_dec_onebyte::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

